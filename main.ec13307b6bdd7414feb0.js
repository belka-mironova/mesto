!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,a,c){var u=o.handleConfirmClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._selector=n,this._name=e.name,this._id=e._id,this._ownerId=e.owner._id,this._userId=c,this._link=e.link,this._likes=e.likes,this._handleCardClick=r,this._handleConfirmClick=u,this._handleLikeClick=i,this._api=a}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._selector).content.querySelector(".place").cloneNode(!0)}},{key:"_handleImageClick",value:function(){this._handleCardClick(this._name,this._link)}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(t){e._handleLikeClick(e,t.target.classList.contains("place__like_active"))})),this._element.querySelector(".place__remove").addEventListener("click",(function(){e._handleConfirmClick()})),this._cardImage.addEventListener("click",(function(){e._handleImageClick()}))}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".place__image"),this._likeButton=this._element.querySelector(".place__like"),this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._element.querySelector(".place__name").textContent=this._name,this._element.querySelector(".place__like-count").textContent=this._likes.length,this._ownerId!==this._userId&&this._element.querySelector(".place__remove").remove(),this._element}},{key:"setLikeCard",value:function(e,t){this._likeButton=this._element.querySelector(".place__like"),this.likeCount=this._element.querySelector(".place__like-count"),e?(this._likeButton.classList.remove("place__like_active"),this.likeCount.textContent=t.likes.length):(this._likeButton.classList.add("place__like_active"),this.likeCount.textContent=t.likes.length)}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=t,this._inputList=Array.from(t.querySelectorAll(n.inputSelector)),this._submitButton=t.querySelector(n.submitButtonSelector),this._errorMessage=n.errorMessage,this._errorInput=n.errorInput,this._inactiveButton=n.inactiveButton}var t,r;return t=e,(r=[{key:"_showInputError",value:function(e){var t=e.getAttribute("name"),n=this._form.querySelector("#".concat(t,"-error"));e.classList.add(this._errorInput),n.textContent=e.validationMessage,n.classList.add(this._errorMessage)}},{key:"_hideInputError",value:function(e){var t=e.getAttribute("name"),n=this._form.querySelector("#".concat(t,"-error"));e.classList.remove(this._errorInput),n.classList.remove(this._errorMessage),n.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButton),this._submitButton.setAttribute("disabled",!0)):(this._submitButton.classList.remove(this._inactiveButton),this._submitButton.removeAttribute("disabled",!0))}},{key:"_setListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(n){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"enableValidation",value:function(){this._setListeners()}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){var n=t._renderer(e);t.addItem(n)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var u=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),c(this,"_handleOverClose",(function(e){e.target.classList.contains("popup")&&n.close()})),this._popup=document.querySelector(t),this._btnclose=this._popup.querySelector(".popup__close")}var t,n;return t=e,(n=[{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("popup_opened")}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("popup_opened")}},{key:"setEventListeners",value:function(){this._btnclose.addEventListener("click",this.close.bind(this)),this._popup.addEventListener("mousedown",this._handleOverClose)}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=p(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}function h(e,t){return h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},h(e,t)}function y(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._cardPicture=document.querySelector(".popup__image"),t._cardCaption=document.querySelector(".popup__caption"),t}return t=a,(n=[{key:"open",value:function(e,t){f(d(a.prototype),"open",this).call(this),this._cardPicture.src=t,this._cardPicture.alt=e,this._cardCaption.textContent=e}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=k(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},b.apply(this,arguments)}function k(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}function g(e,t){return g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},g(e,t)}function w(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function a(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e))._handleFormSubmit=t,r._api=n,r._formElement=r._popup.querySelector(".form"),r._inputList=r._popup.querySelectorAll(".form__input"),r._submitButton=r._popup.querySelector(".form__submit"),r}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){return e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;b(S(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"setLoading",value:function(e){this._submitButton.value=e?"Сохранение...":"Сохранить"}},{key:"close",value:function(){b(S(a.prototype),"close",this).call(this),this._formElement.reset()}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=P(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},L.apply(this,arguments)}function P(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=R(e)););return e}function j(e,t){return j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},j(e,t)}function I(e,t){if(t&&("object"===O(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function R(e){return R=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},R(e)}var q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&j(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=R(r);if(o){var n=R(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._formElement=n._popup.querySelector(".form"),n._submitButton=n._formElement.querySelector(".form__submit"),n._handleSubmitAction=t,n}return t=a,(n=[{key:"open",value:function(e,t){this._cardId=e,this._cardElement=t,L(R(a.prototype),"open",this).call(this)}},{key:"_handleFormSubmit",value:function(e){e.preventDefault(),this._handleSubmitAction(this._cardId,this._cardElement)}},{key:"setEventListeners",value:function(){var e=this;L(R(a.prototype),"setEventListeners",this).call(this),this._submitButton.addEventListener("submit",(function(t){e._handleFromSubmit(t)}))}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(){function e(t){var n=t.selectorName,r=t.selectorInfo,o=t.selectorAvatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(n),this._userInfo=document.querySelector(r),this._userPhoto=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){var e={};return e.name=this._userName.textContent,e.activity=this._userInfo.textContent,e.avatar=this._userPhoto.src,e}},{key:"setUserInfo",value:function(e){this._userName.textContent=e.name,this._userInfo.textContent=e.about}},{key:"setUserPhoto",value:function(e){this._userPhoto.src=e.avatar}}])&&B(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var U=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.url,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getInitialCards",value:function(){return fetch(this._baseUrl+"/cards",{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"postCard",value:function(e){return fetch(this._baseUrl+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"getUserData",value:function(){return fetch(this._baseUrl+"/users/me",{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"setUserData",value:function(e){return fetch(this._baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name2,about:e.occupation})}).then(this._checkResponse)}},{key:"setNewAvatar",value:function(e){return fetch(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatarlink})}).then(this._checkResponse)}},{key:"setLikeCard",value:function(e){return fetch(this._baseUrl+"/cards/likes/".concat(e),{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"deleteLikeCard",value:function(e){return fetch(this._baseUrl+"/cards/likes/".concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}])&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),x=document.querySelector("#editButton"),V=document.querySelector("#addButton"),D=document.querySelector(".profile__photo-edit-button"),N=document.querySelector("#formEdit"),M=N.querySelector("#name"),F=N.querySelector("#occupation"),J=document.querySelector("#formAdd"),G=document.querySelector("#formAvatar"),H={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",errorMessage:"form__error_active",errorInput:"form__input_error",inactiveButton:"form__submit_inactive"};function z(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var $,K=new U({url:"https://mesto.nomoreparties.co/v1/cohort-41",headers:{authorization:"bebc4145-001f-487f-8afd-8c22bbd3883b","Content-Type":"application/json"}});Promise.all([K.getUserData(),K.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return z(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?z(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];re.renderItems(i),Q.setUserInfo(o),Q.setUserPhoto(o),$=o._id})).catch((function(e){return console.log(e)}));var Q=new T({selectorName:".profile__name",selectorInfo:".profile__description",selectorAvatar:".profile__photo"}),W=new E("#popupEdit",(function(e){W.setLoading(!0),K.setUserData(e).then((function(t){console.log(e),Q.setUserInfo(t),W.close()})).catch((function(e){return console.log(e)})).finally((function(){W.setLoading(!1)}))}));W.setEventListeners();var X=new E("#popupAvatar",(function(e){X.setLoading(!0),K.setNewAvatar(e).then((function(e){Q.setUserPhoto(e),X.close()})).catch((function(e){return console.log(e)})).finally((function(){X.setLoading(!1)}))}));X.setEventListeners(),D.addEventListener("click",(function(){ce.resetValidation(),X.open()}));var Y=new _("#popupPic");function Z(e,t){Y.open(e,t)}Y.setEventListeners();var ee=new q("#popupCon",(function(e,t){!function(e,t){K.deleteCard(e).then((function(){t.remove(),ee.close()})).catch((function(e){return console.log(e)}))}(e,t)}));function te(e,t){(t?K.deleteLikeCard(e._id):K.setLikeCard(e._id)).then((function(n){e.setLikeCard(t,n)})).catch((function(e){return console.log(e)}))}function ne(e){var n=new t(e,".places-template",Z,{handleConfirmClick:function(){return ee.open(n._id,n._element)}},te,K,$);return n}ee.setEventListeners();var re=new i({renderer:function(e){return ne(e).generateCard()}},".places"),oe=new E("#popupAdd",(function(e){oe.setLoading(!0),K.postCard(e).then((function(e){var t=ne(e).generateCard();re.addItem(t),oe.close()})).catch((function(e){return console.log(e)})).finally((function(){oe.setLoading(!1)}))}));oe.setEventListeners(),x.addEventListener("click",(function(){W.open();var e=Q.getUserInfo();M.value=e.name,F.value=e.activity,ie.resetValidation()})),V.addEventListener("click",(function(){ae.resetValidation(),oe.open()}));var ie=new r(N,H),ae=new r(J,H),ce=new r(G,H);ie.enableValidation(),ae.enableValidation(),ce.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5lYzEzMzA3YjZiZGQ3NDE0ZmViMC5qcyIsIm1hcHBpbmdzIjoibU1BQXFCQSxFQUFBQSxXQUNuQixXQUNFQyxFQUNBQyxFQUNBQyxFQUhGLEVBS0VDLEVBQ0FDLEVBQ0FDLEdBQ0EsSUFKQ0MsRUFJRCxFQUpDQSxvQiw0RkFJRCxTQUNBQyxLQUFLQyxVQUFZUCxFQUNqQk0sS0FBS0UsTUFBUVQsRUFBS1UsS0FDbEJILEtBQUtJLElBQU1YLEVBQUtXLElBQ2hCSixLQUFLSyxTQUFXWixFQUFLYSxNQUFNRixJQUMzQkosS0FBS08sUUFBVVQsRUFDZkUsS0FBS1EsTUFBUWYsRUFBS2dCLEtBQ2xCVCxLQUFLVSxPQUFTakIsRUFBS2tCLE1BQ25CWCxLQUFLWSxpQkFBbUJqQixFQUN4QkssS0FBS2Esb0JBQXNCZCxFQUMzQkMsS0FBS2MsaUJBQW1CbEIsRUFFeEJJLEtBQUtlLEtBQU9sQixFLGlEQUlkLFdBS0UsT0FKb0JtQixTQUNqQkMsY0FBY2pCLEtBQUtDLFdBQ25CaUIsUUFBUUQsY0FBYyxVQUN0QkUsV0FBVSxLLCtCQU1mLFdBQ0VuQixLQUFLWSxpQkFBaUJaLEtBQUtFLE1BQU9GLEtBQUtRLFMsZ0NBSXpDLFdBQXFCLFdBQ25CUixLQUFLb0IsWUFBWUMsaUJBQWlCLFNBQVMsU0FBQ0MsR0FDMUMsRUFBS1IsaUJBQ0gsRUFDQVEsRUFBSUMsT0FBT0MsVUFBVUMsU0FBUywwQkFJbEN6QixLQUFLMEIsU0FDRlQsY0FBYyxrQkFDZEksaUJBQWlCLFNBQVMsV0FDekIsRUFBS1IseUJBR1RiLEtBQUsyQixXQUFXTixpQkFBaUIsU0FBUyxXQUN4QyxFQUFLTyx5QiwwQkFLVCxXQWlCRSxPQWhCQTVCLEtBQUswQixTQUFXMUIsS0FBSzZCLGVBQ3JCN0IsS0FBSzJCLFdBQWEzQixLQUFLMEIsU0FBU1QsY0FBYyxpQkFDOUNqQixLQUFLb0IsWUFBY3BCLEtBQUswQixTQUFTVCxjQUFjLGdCQUMvQ2pCLEtBQUs4QixxQkFFTDlCLEtBQUsyQixXQUFXSSxJQUFNL0IsS0FBS1EsTUFDM0JSLEtBQUsyQixXQUFXSyxJQUFNaEMsS0FBS0UsTUFDM0JGLEtBQUswQixTQUFTVCxjQUFjLGdCQUFnQmdCLFlBQWNqQyxLQUFLRSxNQUUvREYsS0FBSzBCLFNBQVNULGNBQWMsc0JBQXNCZ0IsWUFDaERqQyxLQUFLVSxPQUFPd0IsT0FFUmxDLEtBQUtLLFdBQWFMLEtBQUtPLFNBQzNCUCxLQUFLMEIsU0FBU1QsY0FBYyxrQkFBa0JrQixTQUd6Q25DLEtBQUswQixXLHlCQUloQixTQUFZVSxFQUFRM0MsR0FDbEJPLEtBQUtvQixZQUFjcEIsS0FBSzBCLFNBQVNULGNBQWMsZ0JBQy9DakIsS0FBS3FDLFVBQVlyQyxLQUFLMEIsU0FBU1QsY0FBYyxzQkFFeENtQixHQUlIcEMsS0FBS29CLFlBQVlJLFVBQVVXLE9BQU8sc0JBQ2xDbkMsS0FBS3FDLFVBQVVKLFlBQWN4QyxFQUFLa0IsTUFBTXVCLFNBSnhDbEMsS0FBS29CLFlBQVlJLFVBQVVjLElBQUksc0JBQy9CdEMsS0FBS3FDLFVBQVVKLFlBQWN4QyxFQUFLa0IsTUFBTXVCLGEsc0VBdkZ2QjFDLEcsMEtDQUErQyxFQUFBQSxXQUNuQixXQUFZQyxFQUFhL0MsSSw0RkFBTSxTQUM3Qk8sS0FBS3lDLE1BQVFELEVBQ2J4QyxLQUFLMEMsV0FBYUMsTUFBTUMsS0FDdEJKLEVBQVlLLGlCQUFpQnBELEVBQUtxRCxnQkFFcEM5QyxLQUFLK0MsY0FBZ0JQLEVBQVl2QixjQUFjeEIsRUFBS3VELHNCQUNwRGhELEtBQUtpRCxjQUFnQnhELEVBQUt5RCxhQUMxQmxELEtBQUttRCxZQUFjMUQsRUFBSzJELFdBQ3hCcEQsS0FBS3FELGdCQUFrQjVELEVBQUs2RCxlLG9EQUc5QixTQUFnQkMsR0FDZCxJQUFNQyxFQUFZRCxFQUFNRSxhQUFhLFFBQy9CQyxFQUFlMUQsS0FBS3lDLE1BQU14QixjQUFYLFdBQTZCdUMsRUFBN0IsV0FDckJELEVBQU0vQixVQUFVYyxJQUFJdEMsS0FBS21ELGFBQ3pCTyxFQUFhekIsWUFBY3NCLEVBQU1JLGtCQUNqQ0QsRUFBYWxDLFVBQVVjLElBQUl0QyxLQUFLaUQsaUIsNkJBR2xDLFNBQWdCTSxHQUNkLElBQU1DLEVBQVlELEVBQU1FLGFBQWEsUUFDL0JDLEVBQWUxRCxLQUFLeUMsTUFBTXhCLGNBQVgsV0FBNkJ1QyxFQUE3QixXQUNyQkQsRUFBTS9CLFVBQVVXLE9BQU9uQyxLQUFLbUQsYUFDNUJPLEVBQWFsQyxVQUFVVyxPQUFPbkMsS0FBS2lELGVBQ25DUyxFQUFhekIsWUFBYyxLLGlDQUk3QixTQUFvQnNCLEdBQ2JBLEVBQU1LLFNBQVNDLE1BR2xCN0QsS0FBSzhELGdCQUFnQlAsR0FGckJ2RCxLQUFLK0QsZ0JBQWdCUixFQUFPQSxFQUFNSSxxQiw4QkFNdEMsV0FDRSxPQUFPM0QsS0FBSzBDLFdBQVdzQixNQUFLLFNBQUNDLEdBQzNCLE9BQVFBLEVBQWFMLFNBQVNDLFcsZ0NBSWxDLFdBQ003RCxLQUFLa0Usb0JBQ1BsRSxLQUFLK0MsY0FBY3ZCLFVBQVVjLElBQUl0QyxLQUFLcUQsaUJBQ3RDckQsS0FBSytDLGNBQWNvQixhQUFhLFlBQVksS0FFNUNuRSxLQUFLK0MsY0FBY3ZCLFVBQVVXLE9BQU9uQyxLQUFLcUQsaUJBQ3pDckQsS0FBSytDLGNBQWNxQixnQkFBZ0IsWUFBWSxNLDJCQUluRCxXQUFnQixXQUNkcEUsS0FBS3FFLHFCQUNMckUsS0FBSzBDLFdBQVc0QixTQUFRLFNBQUNMLEdBQ3ZCQSxFQUFhNUMsaUJBQWlCLFNBQVMsU0FBQ2tELEdBQ3RDLEVBQUtDLG9CQUFvQlAsR0FDekIsRUFBS0ksNkIsNkJBS1gsV0FBa0IsV0FDaEJyRSxLQUFLcUUscUJBQ0xyRSxLQUFLMEMsV0FBVzRCLFNBQVEsU0FBQ0wsR0FDdkIsRUFBS0gsZ0JBQWdCRyxRLDhCQUl6QixXQUNFakUsS0FBS3lFLHFCLHNFQXZFWWxDLEcsMEtDQUFtQyxFQUFBQSxXQUNuQixhQUF3QmhGLEdBQVcsSUFBdEJpRixFQUFzQixFQUF0QkEsVSw0RkFBc0IsU0FDakMzRSxLQUFLNEUsVUFBWUQsRUFDakIzRSxLQUFLNkUsV0FBYTdELFNBQVNDLGNBQWN2QixHLGdEQUUzQyxTQUFZb0YsR0FBSyxXQUNmQSxFQUFJUixTQUFRLFNBQUFTLEdBQ1YsSUFBTUMsRUFBTyxFQUFLSixVQUFVRyxHQUM1QixFQUFLRSxRQUFRRCxRLHFCQUdqQixTQUFRRSxHQUNObEYsS0FBSzZFLFdBQVdNLFFBQVFELFEsc0VBWlBSLEcsa1NDQUFVLEVBQUFBLFdBQ25CLFdBQVkxRixHQUFVLFksNEZBQUEsbUNBY0osU0FBQzRCLEdBQ0QsV0FBWkEsRUFBSStELEtBQ04sRUFBS0MsV0FoQmEsMkJBb0JILFNBQUNoRSxHQUNkQSxFQUFJQyxPQUFPQyxVQUFVQyxTQUFTLFVBQ2hDLEVBQUs2RCxXQXJCUHRGLEtBQUt1RixPQUFTdkUsU0FBU0MsY0FBY3ZCLEdBQ3JDTSxLQUFLd0YsVUFBWXhGLEtBQUt1RixPQUFPdEUsY0FBYyxpQix5Q0FFN0MsV0FDRUQsU0FBU0ssaUJBQWlCLFVBQVdyQixLQUFLeUYsaUJBQzFDekYsS0FBS3VGLE9BQU8vRCxVQUFVYyxJQUFJLGtCLG1CQUc1QixXQUNFdEIsU0FBUzBFLG9CQUFvQixVQUFXMUYsS0FBS3lGLGlCQUM3Q3pGLEtBQUt1RixPQUFPL0QsVUFBVVcsT0FBTyxrQiwrQkFlL0IsV0FDRW5DLEtBQUt3RixVQUFVbkUsaUJBQWlCLFFBQVNyQixLQUFLc0YsTUFBTUssS0FBSzNGLE9BQ3pEQSxLQUFLdUYsT0FBT2xFLGlCQUFpQixZQUFhckIsS0FBSzRGLHVCLHNFQTdCOUJSLEcsK3RDQ0VBUyxFQUFBQSxTQUFBQSxJLDZyQkFDbkIsV0FBWW5HLEdBQVUsYSw0RkFBQSxVQUNwQixjQUFNQSxJQUNEb0csYUFBZTlFLFNBQVNDLGNBQWMsaUJBQzNDLEVBQUs4RSxhQUFlL0UsU0FBU0MsY0FBYyxtQkFIdkIsRSxpQ0FNdEIsU0FBS2QsRUFBTTRCLEdBQ1QseUNBQ0EvQixLQUFLOEYsYUFBYS9ELElBQU1BLEVBQ3hCL0IsS0FBSzhGLGFBQWE5RCxJQUFNN0IsRUFDeEJILEtBQUsrRixhQUFhOUQsWUFBYzlCLE8sc0VBWGYwRixDQUF1QlQsRywrdENDQXZCWSxFQUFBQSxTQUFBQSxJLDZyQkFDbkIsV0FBWXRHLEVBQVV1RyxFQUFrQnBHLEdBQUssYSw0RkFBQSxVQUMzQyxjQUFNSCxJQUNEd0csa0JBQW9CRCxFQUN6QixFQUFLbEYsS0FBT2xCLEVBQ1osRUFBS3NHLGFBQWUsRUFBS1osT0FBT3RFLGNBQWMsU0FDOUMsRUFBS3lCLFdBQWEsRUFBSzZDLE9BQU8xQyxpQkFBaUIsZ0JBQy9DLEVBQUtFLGNBQWdCLEVBQUt3QyxPQUFPdEUsY0FBYyxpQkFOSixFLDRDQVM3QyxXQUFrQixXQUtoQixPQUpBakIsS0FBS29HLFlBQWMsR0FDbkJwRyxLQUFLMEMsV0FBVzRCLFNBQ2QsU0FBQ2YsR0FBRCxPQUFZLEVBQUs2QyxZQUFZN0MsRUFBTXBELE1BQVFvRCxFQUFNOEMsU0FFNUNyRyxLQUFLb0csYywrQkFHZCxXQUFvQixXQUNsQixzREFDQXBHLEtBQUttRyxhQUFhOUUsaUJBQWlCLFVBQVUsU0FBQ0MsR0FDNUNBLEVBQUlnRixpQkFDSixFQUFLSixrQkFBa0IsRUFBS0ssd0Isd0JBSWhDLFNBQVdDLEdBRUx4RyxLQUFLK0MsY0FBY3NELE1BRHBCRyxFQUM0QixnQkFHRixjLG1CQUkvQixXQUNFLDBDQUNBeEcsS0FBS21HLGFBQWFNLGEsc0VBckNEVCxDQUFzQlosRywrdENDQXRCc0IsRUFBQUEsU0FBQUEsSSw2ckJBQ25CLFdBQVloSCxFQUFVaUgsR0FBb0IsYSw0RkFBQSxVQUN4QyxjQUFNakgsSUFDRHlHLGFBQWUsRUFBS1osT0FBT3RFLGNBQWMsU0FDOUMsRUFBSzhCLGNBQWdCLEVBQUtvRCxhQUFhbEYsY0FBYyxpQkFDckQsRUFBSzJGLG9CQUFzQkQsRUFKYSxFLGlDQU8xQyxTQUFLRSxFQUFJM0IsR0FDUGxGLEtBQUs4RyxRQUFVRCxFQUNmN0csS0FBSytHLGFBQWU3QixFQUNwQiwyQywrQkFHRixTQUFrQjVELEdBQ2hCQSxFQUFJZ0YsaUJBQ0p0RyxLQUFLNEcsb0JBQW9CNUcsS0FBSzhHLFFBQVM5RyxLQUFLK0csZ0IsK0JBRzlDLFdBQW9CLFdBQ2xCLHNEQUNBL0csS0FBSytDLGNBQWMxQixpQkFBaUIsVUFBVSxTQUFDQyxHQUM3QyxFQUFLMEYsa0JBQWtCMUYsVyxzRUF0QlJvRixDQUF3QnRCLEcsMEtDRnhCNkIsRUFBQUEsV0FDbkIsY0FBNEQsSUFBOUNDLEVBQThDLEVBQTlDQSxhQUFjQyxFQUFnQyxFQUFoQ0EsYUFBY0MsRUFBa0IsRUFBbEJBLGdCLDRGQUFrQixTQUMxRHBILEtBQUtxSCxVQUFZckcsU0FBU0MsY0FBY2lHLEdBQ3hDbEgsS0FBS3NILFVBQVl0RyxTQUFTQyxjQUFja0csR0FDeENuSCxLQUFLdUgsV0FBYXZHLFNBQVNDLGNBQWNtRyxHLGdEQUczQyxXQUNFLElBQU1JLEVBQVcsR0FLakIsT0FKQUEsRUFBU3JILEtBQU9ILEtBQUtxSCxVQUFVcEYsWUFDL0J1RixFQUFTQyxTQUFXekgsS0FBS3NILFVBQVVyRixZQUNuQ3VGLEVBQVNFLE9BQVMxSCxLQUFLdUgsV0FBV3hGLElBRTNCeUYsSSx5QkFHVCxTQUFZL0gsR0FDVk8sS0FBS3FILFVBQVVwRixZQUFjeEMsRUFBS1UsS0FDbENILEtBQUtzSCxVQUFVckYsWUFBY3hDLEVBQUtrSSxRLDBCQUdwQyxTQUFhbEksR0FDWE8sS0FBS3VILFdBQVd4RixJQUFNdEMsRUFBS2lJLFksc0VBdEJWVCxHLDBLQ0FBVyxFQUFBQSxXQUNuQixXQUFZQyxJLDRGQUFRLFNBQ2xCN0gsS0FBSzhILFNBQVdELEVBQU9FLElBQ3ZCL0gsS0FBS2dJLFNBQVdILEVBQU9JLFEsbURBSXpCLFNBQWVDLEdBQ2IsT0FBSUEsRUFBSUMsR0FDQ0QsRUFBSUUsT0FFTkMsUUFBUUMsT0FBUixpQkFBeUJKLEVBQUlLLFcsNkJBSXRDLFdBQ0UsT0FBT0MsTUFBTXhJLEtBQUs4SCxTQUFXLFNBQVUsQ0FDckNXLE9BQVEsTUFDUlIsUUFBU2pJLEtBQUtnSSxXQUNiVSxLQUFLMUksS0FBSzJJLGtCLHNCQUlmLFNBQVNsSixHQUNQLE9BQU8rSSxNQUFNeEksS0FBSzhILFNBQVcsU0FBVSxDQUNyQ1csT0FBUSxPQUNSUixRQUFTakksS0FBS2dJLFNBQ2RZLEtBQU1DLEtBQUtDLFVBQVUsQ0FBRTNJLEtBQU1WLEVBQUtVLEtBQU1NLEtBQU1oQixFQUFLZ0IsU0FDbERpSSxLQUFLMUksS0FBSzJJLGtCLHdCQUlmLFNBQVc5QixHQUNULE9BQU8yQixNQUFNLEdBQUQsT0FBSXhJLEtBQUs4SCxTQUFULGtCQUEyQmpCLEdBQU0sQ0FDM0M0QixPQUFRLFNBQ1JSLFFBQVNqSSxLQUFLZ0ksV0FDYlUsS0FBSzFJLEtBQUsySSxrQix5QkFJZixXQUNFLE9BQU9ILE1BQU14SSxLQUFLOEgsU0FBVyxZQUFhLENBQ3hDVyxPQUFRLE1BQ1JSLFFBQVNqSSxLQUFLZ0ksV0FDYlUsS0FBSzFJLEtBQUsySSxrQix5QkFJZixTQUFZbEosR0FDVixPQUFPK0ksTUFBTXhJLEtBQUs4SCxTQUFXLFlBQWEsQ0FDeENXLE9BQVEsUUFDUlIsUUFBU2pJLEtBQUtnSSxTQUNkWSxLQUFNQyxLQUFLQyxVQUFVLENBQ25CM0ksS0FBTVYsRUFBS3NKLE1BQ1hwQixNQUFPbEksRUFBS3VKLGVBRWJOLEtBQUsxSSxLQUFLMkksa0IsMEJBSWYsU0FBYWxKLEdBQ1gsT0FBTytJLE1BQU14SSxLQUFLOEgsU0FBTCxtQkFBb0MsQ0FDL0NXLE9BQVEsUUFDUlIsUUFBU2pJLEtBQUtnSSxTQUNkWSxLQUFNQyxLQUFLQyxVQUFVLENBQ25CcEIsT0FBUWpJLEVBQUt3SixlQUVkUCxLQUFLMUksS0FBSzJJLGtCLHlCQUlmLFNBQVk5QixHQUNWLE9BQU8yQixNQUFNeEksS0FBSzhILFNBQUwsdUJBQWdDakIsR0FBTSxDQUNqRDRCLE9BQVEsTUFDUlIsUUFBU2pJLEtBQUtnSSxXQUNiVSxLQUFLMUksS0FBSzJJLGtCLDRCQUlmLFNBQWU5QixHQUNiLE9BQU8yQixNQUFNeEksS0FBSzhILFNBQUwsdUJBQWdDakIsR0FBTSxDQUNqRDRCLE9BQVEsU0FDUlIsUUFBU2pJLEtBQUtnSSxXQUNiVSxLQUFLMUksS0FBSzJJLHFCLHNFQW5GSWYsR0M2QlJzQixFQUFnQmxJLFNBQVNDLGNBQWMsZUFDdkNrSSxFQUFZbkksU0FBU0MsY0FBYyxjQUNuQ21JLEVBQWVwSSxTQUFTQyxjQUFjLCtCQUN0Q29JLEVBQVdySSxTQUFTQyxjQUFjLGFBQ2xDcUksRUFBWUQsRUFBU3BJLGNBQWMsU0FDbkNzSSxFQUFXRixFQUFTcEksY0FBYyxlQUNsQ3VJLEVBQVV4SSxTQUFTQyxjQUFjLFlBQ2pDd0ksRUFBYXpJLFNBQVNDLGNBQWMsZUFJcEM0RyxFQUFTLENBQ3BCNkIsYUFBYyxRQUNkNUcsY0FBZSxlQUNmRSxxQkFBc0IsZ0JBQ3RCRSxhQUFjLHFCQUNkRSxXQUFZLG9CQUNaRSxlQUFnQix5QiwwR0NwQmxCLElBUUl4RCxFQVJFRCxFQUFNLElBQUkrSCxFQUFJLENBQ2xCRyxJQUFLLDhDQUNMRSxRQUFTLENBQ1AwQixjQUFlLHVDQUNmLGVBQWdCLHNCQU1wQnRCLFFBQVF1QixJQUFJLENBQUMvSixFQUFJZ0ssY0FBZWhLLEVBQUlpSyxvQkFDakNwQixNQUFLLFlBQW1CLEksSUFBQSxHLEVBQUEsRSw0Q0FBQSxJLGd4QkFBakJxQixFQUFpQixLQUFYQyxFQUFXLEtBQ3ZCQyxHQUFTQyxZQUFZRixHQUVyQkcsRUFBU0MsWUFBWUwsR0FDckJJLEVBQVNFLGFBQWFOLEdBQ3RCakssRUFBU2lLLEVBQUszSixPQUVma0ssT0FBTSxTQUFDQyxHQUFELE9BQVNDLFFBQVFDLElBQUlGLE1BSTlCLElBQU1KLEVBQVcsSUFBSWxELEVBQVMsQ0FDNUJDLGFBQWMsaUJBQ2RDLGFBQWMsd0JBQ2RDLGVBQWdCLG9CQUtac0QsRUFBZSxJQUFJMUUsRUFBYyxjQUFjLFNBQUN2RyxHQUNwRGlMLEVBQWFDLFlBQVcsR0FDeEI5SyxFQUNHK0ssWUFBWW5MLEdBQ1ppSixNQUFLLFNBQUNSLEdBQ0xzQyxRQUFRQyxJQUFJaEwsR0FDWjBLLEVBQVNDLFlBQVlsQyxHQUNyQndDLEVBQWFwRixXQUVkZ0YsT0FBTSxTQUFDQyxHQUFELE9BQVNDLFFBQVFDLElBQUlGLE1BQzNCTSxTQUFRLFdBQ1BILEVBQWFDLFlBQVcsU0FHOUJELEVBQWFJLG9CQUdiLElBQU1DLEVBQWMsSUFBSS9FLEVBQWMsZ0JBQWdCLFNBQUN2RyxHQUNyRHNMLEVBQVlKLFlBQVcsR0FDdkI5SyxFQUNHbUwsYUFBYXZMLEdBQ2JpSixNQUFLLFNBQUNqSixHQUNMMEssRUFBU0UsYUFBYTVLLEdBQ3RCc0wsRUFBWXpGLFdBRWJnRixPQUFNLFNBQUNDLEdBQUQsT0FBU0MsUUFBUUMsSUFBSUYsTUFDM0JNLFNBQVEsV0FDUEUsRUFBWUosWUFBVyxTQUc3QkksRUFBWUQsb0JBR1oxQixFQUFhL0gsaUJBQWlCLFNBQVMsV0FDckM0SixHQUFnQkMsa0JBQ2hCSCxFQUFZSSxVQUtkLElBQU1DLEVBQWEsSUFBSXZGLEVBQWUsYUFJdEMsU0FBU2xHLEVBQWdCUSxFQUFNTSxHQUM3QjJLLEVBQVdELEtBQUtoTCxFQUFNTSxHQUp4QjJLLEVBQVdOLG9CQU9YLElBQU1PLEdBQWUsSUFBSTNFLEVBQWdCLGFBQWEsU0FBQ0csRUFBSTNCLElBTTNELFNBQTJCMkIsRUFBSTNCLEdBQzdCckYsRUFDR3lMLFdBQVd6RSxHQUNYNkIsTUFBSyxXQUNKeEQsRUFBUS9DLFNBQ1JrSixHQUFhL0YsV0FFZGdGLE9BQU0sU0FBQ0MsR0FBRCxPQUFTQyxRQUFRQyxJQUFJRixNQVo5QmdCLENBQWtCMUUsRUFBSTNCLE1BZ0J4QixTQUFTdEYsR0FBZ0JvRixFQUFNNUMsSUFDWkEsRUFDYnZDLEVBQUkyTCxlQUFleEcsRUFBSzVFLEtBQ3hCUCxFQUFJNEwsWUFBWXpHLEVBQUs1RSxNQUV0QnNJLE1BQUssU0FBQ1IsR0FDTGxELEVBQUt5RyxZQUFZckosRUFBUThGLE1BRTFCb0MsT0FBTSxTQUFDQyxHQUFELE9BQVNDLFFBQVFDLElBQUlGLE1BSWhDLFNBQVNtQixHQUFXM0csR0FDbEIsSUFBTUMsRUFBTyxJQUFJeEYsRUFDZnVGLEVBQ0EsbUJBQ0FwRixFQUNBLENBQUVJLG1CQUFvQixrQkFBTXNMLEdBQWFGLEtBQUtuRyxFQUFLNUUsSUFBSzRFLEVBQUt0RCxZQUM3RDlCLEdBQ0FDLEVBQ0FDLEdBRUYsT0FBT2tGLEVBcENUcUcsR0FBYVAsb0JBK0NiLElBQU1iLEdBQVcsSUFBSXZGLEVBQ25CLENBQ0VDLFNBVEosU0FBb0JJLEdBR2xCLE9BRmEyRyxHQUFXM0csR0FDQzRHLGlCQVN6QixXQUtJQyxHQUFZLElBQUk1RixFQUFjLGFBQWEsU0FBQ3ZHLEdBQ2hEbU0sR0FBVWpCLFlBQVcsR0FDckI5SyxFQUNHZ00sU0FBU3BNLEdBQ1RpSixNQUFLLFNBQUNSLEdBQ0wsSUFDTTRELEVBRE9KLEdBQVd4RCxHQUNDeUQsZUFDekIxQixHQUFTaEYsUUFBUTZHLEdBQ2pCRixHQUFVdEcsV0FFWGdGLE9BQU0sU0FBQ0MsR0FBRCxPQUFTQyxRQUFRQyxJQUFJRixNQUMzQk0sU0FBUSxXQUNQZSxHQUFVakIsWUFBVyxTQUczQmlCLEdBQVVkLG9CQUdWNUIsRUFBYzdILGlCQUFpQixTQUFTLFdBQ3RDcUosRUFBYVMsT0FDYixJQUFNWSxFQUFZNUIsRUFBUzZCLGNBQzNCMUMsRUFBVWpELE1BQVEwRixFQUFVNUwsS0FDNUJvSixFQUFTbEQsTUFBUTBGLEVBQVV0RSxTQUMzQndFLEdBQWlCZixxQkFHbkIvQixFQUFVOUgsaUJBQWlCLFNBQVMsV0FDbEM2SyxHQUFjaEIsa0JBQ2RVLEdBQVVULFVBSVosSUFBTWMsR0FBbUIsSUFBSTFKLEVBQWM4RyxFQUFVeEIsR0FDL0NxRSxHQUFnQixJQUFJM0osRUFBY2lILEVBQVMzQixHQUMzQ29ELEdBQWtCLElBQUkxSSxFQUFja0gsRUFBWTVCLEdBRXREb0UsR0FBaUJFLG1CQUNqQkQsR0FBY0MsbUJBQ2RsQixHQUFnQmtCLG1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aFN1Ym1pdC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcbiAgY29uc3RydWN0b3IoXG4gICAgZGF0YSxcbiAgICBzZWxlY3RvcixcbiAgICBoYW5kbGVDYXJkQ2xpY2ssXG4gICAge2hhbmRsZUNvbmZpcm1DbGlja30sXG4gICAgaGFuZGxlTGlrZUNsaWNrLFxuICAgIGFwaSxcbiAgICB1c2VySWRcbiAgKSB7XG4gICAgdGhpcy5fc2VsZWN0b3IgPSBzZWxlY3RvcjtcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xuICAgIHRoaXMuX2lkID0gZGF0YS5faWQ7XG4gICAgdGhpcy5fb3duZXJJZCA9IGRhdGEub3duZXIuX2lkO1xuICAgIHRoaXMuX3VzZXJJZCA9IHVzZXJJZDtcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xuICAgIHRoaXMuX2xpa2VzID0gZGF0YS5saWtlcztcbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XG4gICAgdGhpcy5faGFuZGxlQ29uZmlybUNsaWNrID0gaGFuZGxlQ29uZmlybUNsaWNrO1xuICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayA9IGhhbmRsZUxpa2VDbGljaztcblxuICAgIHRoaXMuX2FwaSA9IGFwaTtcbiAgfVxuXG4gIC8v0L/QvtC70YPRh9C10L3QuNC1INGC0LXQvNC/0LvQtdC50YLQsFxuICBfZ2V0VGVtcGxhdGUoKSB7XG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fc2VsZWN0b3IpXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlXCIpXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xuICAgIHJldHVybiBjYXJkRWxlbWVudDtcbiAgfVxuXG5cbiAgLy/QvNC10YLQvtC0LCDQvtGC0LLQtdGH0LDRjtGJ0LjQuSDQt9CwINC90LDQttCw0YLQuNC1INC90LAg0LrQsNGA0YLQuNC90LrRg1xuICBfaGFuZGxlSW1hZ2VDbGljaygpIHtcbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sodGhpcy5fbmFtZSwgdGhpcy5fbGluayk7XG4gIH1cblxuICAvL9GD0YHRgtCw0L3QvtCy0LrQsCDRgdC70YPRiNCw0YLQtdC70LXQuVxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fbGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlTGlrZUNsaWNrKFxuICAgICAgICB0aGlzLFxuICAgICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBsYWNlX19saWtlX2FjdGl2ZVwiKVxuICAgICAgKTtcbiAgICB9KTtcblxuICAgIHRoaXMuX2VsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlX19yZW1vdmVcIilcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICB0aGlzLl9oYW5kbGVDb25maXJtQ2xpY2soKTtcbiAgICAgIH0pO1xuXG4gICAgdGhpcy5fY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrKCk7XG4gICAgfSk7XG4gIH1cblxuICAvL9Cz0LXQvdC10YDQsNGG0LjRjyDQutCw0YDRgtC+0YfQtdC6XG4gIGdlbmVyYXRlQ2FyZCgpIHtcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcbiAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX2ltYWdlXCIpO1xuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX2xpa2VcIik7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuICAgIHRoaXMuX2NhcmRJbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xuICAgIHRoaXMuX2NhcmRJbWFnZS5hbHQgPSB0aGlzLl9uYW1lO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbGFjZV9fbmFtZVwiKS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG5cbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX2xpa2UtY291bnRcIikudGV4dENvbnRlbnQgPVxuICAgICAgdGhpcy5fbGlrZXMubGVuZ3RoO1xuXG4gICAgaWYgKCEodGhpcy5fb3duZXJJZCA9PT0gdGhpcy5fdXNlcklkKSkge1xuICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlX19yZW1vdmVcIikucmVtb3ZlKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XG4gIH1cblxuLy/QvNC10YLQvtC0LCDQvtGC0LLQtdGH0LDRjtGJ0LjQuSDQt9CwINC40LfQvNC10L3QtdC90LjRjyDQstC10YDRgdC60Lgg0L/RgNC4INC90LDQttCw0YLQuNC4INC90LAg0LrQvdC+0L/QutGDINC70LDQudC60LBcbnNldExpa2VDYXJkKGlzTGlrZSwgZGF0YSkge1xuICB0aGlzLl9saWtlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlX19saWtlXCIpO1xuICB0aGlzLmxpa2VDb3VudCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbGFjZV9fbGlrZS1jb3VudFwiKTtcblxuICBpZiAoIWlzTGlrZSkge1xuICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmFkZChcInBsYWNlX19saWtlX2FjdGl2ZVwiKTtcbiAgICB0aGlzLmxpa2VDb3VudC50ZXh0Q29udGVudCA9IGRhdGEubGlrZXMubGVuZ3RoO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LnJlbW92ZShcInBsYWNlX19saWtlX2FjdGl2ZVwiKTtcbiAgICB0aGlzLmxpa2VDb3VudC50ZXh0Q29udGVudCA9IGRhdGEubGlrZXMubGVuZ3RoO1xuICB9XG59XG5cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3Rvcihmb3JtRWxlbWVudCwgZGF0YSkge1xuICAgIHRoaXMuX2Zvcm0gPSBmb3JtRWxlbWVudDtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKFxuICAgICAgZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChkYXRhLmlucHV0U2VsZWN0b3IpXG4gICAgKTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGRhdGEuc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xuICAgIHRoaXMuX2Vycm9yTWVzc2FnZSA9IGRhdGEuZXJyb3JNZXNzYWdlO1xuICAgIHRoaXMuX2Vycm9ySW5wdXQgPSBkYXRhLmVycm9ySW5wdXQ7XG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b24gPSBkYXRhLmluYWN0aXZlQnV0dG9uO1xuICB9XG4gIC8v0L/QvtC60LDQt9GL0LLQsNC10Lwg0L7RiNC40LHQutGDXG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dCkge1xuICAgIGNvbnN0IGlucHV0TmFtZSA9IGlucHV0LmdldEF0dHJpYnV0ZShcIm5hbWVcIik7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dE5hbWV9LWVycm9yYCk7XG4gICAgaW5wdXQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvcklucHV0KTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBpbnB1dC52YWxpZGF0aW9uTWVzc2FnZTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvck1lc3NhZ2UpO1xuICB9XG5cbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0KSB7XG4gICAgY29uc3QgaW5wdXROYW1lID0gaW5wdXQuZ2V0QXR0cmlidXRlKFwibmFtZVwiKTtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0TmFtZX0tZXJyb3JgKTtcbiAgICBpbnB1dC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9ySW5wdXQpO1xuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yTWVzc2FnZSk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcbiAgfVxuXG4gIC8vINC/0YDQvtCy0LXRgNC60LAg0LLQsNC70LjQtNCw0YbQuNC4XG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXQpIHtcbiAgICBpZiAoIWlucHV0LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dCwgaW5wdXQudmFsaWRhdGlvbk1lc3NhZ2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dCk7XG4gICAgfVxuICB9XG5cbiAgX2hhc0ludmFsaWRJbnB1dCgpIHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XG4gICAgfSk7XG4gIH1cblxuICBfdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCgpKSB7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbik7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIiwgdHJ1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uKTtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLCB0cnVlKTtcbiAgICB9XG4gIH1cblxuICBfc2V0TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoZSkgPT4ge1xuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgcmVzZXRWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICB9KTtcbiAgfVxuXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fc2V0TGlzdGVuZXJzKCk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7cmVuZGVyZXJ9LCBzZWxlY3RvciApIHtcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xuICB9XG4gIHJlbmRlckl0ZW1zKGFycikge1xuICAgIGFyci5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgY29uc3QgY2FyZCA9IHRoaXMuX3JlbmRlcmVyKGl0ZW0pOyBcbiAgICAgIHRoaXMuYWRkSXRlbShjYXJkKTt9KTtcbiAgfVxuXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTtcbiAgICB0aGlzLl9idG5jbG9zZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Nsb3NlXCIpO1xuICB9XG4gIG9wZW4oKSB7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9vcGVuZWRcIik7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwX29wZW5lZFwiKTtcbiAgfVxuXG4gIF9oYW5kbGVFc2NDbG9zZSA9IChldnQpID0+IHtcbiAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbiAgfTtcblxuICBfaGFuZGxlT3ZlckNsb3NlID0gKGV2dCkgPT4ge1xuICAgIGlmIChldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwXCIpKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9O1xuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2J0bmNsb3NlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmNsb3NlLmJpbmQodGhpcykpO1xuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgdGhpcy5faGFuZGxlT3ZlckNsb3NlKTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3RvcihzZWxlY3Rvcikge1xuICAgIHN1cGVyKHNlbGVjdG9yKTtcbiAgICB0aGlzLl9jYXJkUGljdHVyZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltYWdlXCIpO1xuICAgIHRoaXMuX2NhcmRDYXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fY2FwdGlvblwiKTtcbiAgfVxuXG4gIG9wZW4obmFtZSwgc3JjKSB7XG4gICAgc3VwZXIub3BlbigpO1xuICAgIHRoaXMuX2NhcmRQaWN0dXJlLnNyYyA9IHNyYztcbiAgICB0aGlzLl9jYXJkUGljdHVyZS5hbHQgPSBuYW1lO1xuICAgIHRoaXMuX2NhcmRDYXB0aW9uLnRleHRDb250ZW50ID0gbmFtZTtcbiAgfVxufVxuXG5cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3RvcihzZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCwgYXBpKSB7XG4gICAgc3VwZXIoc2VsZWN0b3IpO1xuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xuICAgIHRoaXMuX2FwaSA9IGFwaTtcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybVwiKTtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yQWxsKFwiLmZvcm1fX2lucHV0XCIpO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybV9fc3VibWl0XCIpO1xuICB9XG5cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIHRoaXMuX2Zvcm1WYWx1ZXMgPSB7fTtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChcbiAgICAgIChpbnB1dCkgPT4gKHRoaXMuX2Zvcm1WYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZSlcbiAgICApO1xuICAgIHJldHVybiB0aGlzLl9mb3JtVmFsdWVzO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9mb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgICB9KTtcbiAgfVxuXG4gIHNldExvYWRpbmcoaXNMb2FkaW5nKXtcbiAgICBpZihpc0xvYWRpbmcpe1xuICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b24udmFsdWUgPSBcItCh0L7RhdGA0LDQvdC10L3QuNC1Li4uXCI7XG4gICAgfVxuICAgIGVsc2V7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24udmFsdWUgPSBcItCh0L7RhdGA0LDQvdC40YLRjFwiO1xuICAgIH1cbn1cblxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50LnJlc2V0KCk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhTdWJtaXQgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHNlbGVjdG9yLCBoYW5kbGVTdWJtaXRBY3Rpb24pIHtcbiAgICBzdXBlcihzZWxlY3Rvcik7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1cIik7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5mb3JtX19zdWJtaXRcIik7XG4gICAgdGhpcy5faGFuZGxlU3VibWl0QWN0aW9uID0gaGFuZGxlU3VibWl0QWN0aW9uO1xuICB9XG5cbiAgb3BlbihpZCwgZWxlbWVudCkge1xuICAgIHRoaXMuX2NhcmRJZCA9IGlkO1xuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gZWxlbWVudDtcbiAgICBzdXBlci5vcGVuKCk7XG4gIH1cblxuICBfaGFuZGxlRm9ybVN1Ym1pdChldnQpe1xuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMuX2hhbmRsZVN1Ym1pdEFjdGlvbih0aGlzLl9jYXJkSWQsIHRoaXMuX2NhcmRFbGVtZW50KTtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlRnJvbVN1Ym1pdChldnQpO1xuICAgIH0pO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XG4gIGNvbnN0cnVjdG9yKHsgc2VsZWN0b3JOYW1lLCBzZWxlY3RvckluZm8sIHNlbGVjdG9yQXZhdGFyIH0pIHtcbiAgICB0aGlzLl91c2VyTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3JOYW1lKTtcbiAgICB0aGlzLl91c2VySW5mbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3JJbmZvKTtcbiAgICB0aGlzLl91c2VyUGhvdG8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yQXZhdGFyKTtcbiAgfVxuXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIGNvbnN0IHVzZXJJbmZvID0ge307XG4gICAgdXNlckluZm8ubmFtZSA9IHRoaXMuX3VzZXJOYW1lLnRleHRDb250ZW50O1xuICAgIHVzZXJJbmZvLmFjdGl2aXR5ID0gdGhpcy5fdXNlckluZm8udGV4dENvbnRlbnQ7XG4gICAgdXNlckluZm8uYXZhdGFyID0gdGhpcy5fdXNlclBob3RvLnNyYztcblxuICAgIHJldHVybiB1c2VySW5mbztcbiAgfVxuXG4gIHNldFVzZXJJbmZvKGRhdGEpIHtcbiAgICB0aGlzLl91c2VyTmFtZS50ZXh0Q29udGVudCA9IGRhdGEubmFtZTtcbiAgICB0aGlzLl91c2VySW5mby50ZXh0Q29udGVudCA9IGRhdGEuYWJvdXQ7XG4gIH1cblxuICBzZXRVc2VyUGhvdG8oZGF0YSkge1xuICAgIHRoaXMuX3VzZXJQaG90by5zcmMgPSBkYXRhLmF2YXRhcjtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcbiAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgdGhpcy5fYmFzZVVybCA9IGNvbmZpZy51cmw7XG4gICAgdGhpcy5faGVhZGVycyA9IGNvbmZpZy5oZWFkZXJzO1xuICB9XG5cbiAgLy/Qv9GA0LjQstCw0YLQvdCw0Y8g0YTRg9C90LrRhtC40Y8g0L/RgNC+0LLQtdGA0LrQuCDQvtGC0LLQtdGC0LBcbiAgX2NoZWNrUmVzcG9uc2UocmVzKSB7XG4gICAgaWYgKHJlcy5vaykge1xuICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgfVxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgfVxuXG4gIC8v0L/QvtC70YPRh9C40YLRjCDQutCw0YDRgtC+0YfQutC4INGBINGB0LXRgNCy0LXRgNCwIChHRVQpXG4gIGdldEluaXRpYWxDYXJkcygpIHtcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVybCArIFwiL2NhcmRzXCIsIHtcbiAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcbiAgfVxuXG4gIC8v0LTQvtCx0LDQstC40YLRjCDQutCw0YDRgtC+0YfQutGDIChQT1NUKVxuICBwb3N0Q2FyZChkYXRhKSB7XG4gICAgcmV0dXJuIGZldGNoKHRoaXMuX2Jhc2VVcmwgKyBcIi9jYXJkc1wiLCB7XG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgbmFtZTogZGF0YS5uYW1lLCBsaW5rOiBkYXRhLmxpbmsgfSksXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcbiAgfVxuXG4gIC8v0YPQtNCw0LvQuNGC0Ywg0LrQsNGA0YLQvtGH0LrRgyAoREVMRVRFKVxuICBkZWxldGVDYXJkKGlkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7aWR9YCwge1xuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xuICB9XG5cbiAgLy/Qv9C+0LvRg9GH0LjRgtGMINC00LDQvdC90YvQtSDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y8gKEdFVClcbiAgZ2V0VXNlckRhdGEoKSB7XG4gICAgcmV0dXJuIGZldGNoKHRoaXMuX2Jhc2VVcmwgKyBcIi91c2Vycy9tZVwiLCB7XG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XG4gIH1cblxuICAvL9C30LDQvNC10L3QuNGC0Ywg0LTQsNC90L3Ri9C1INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjyAoUEFUQ0gpXG4gIHNldFVzZXJEYXRhKGRhdGEpIHtcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVybCArIFwiL3VzZXJzL21lXCIsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogZGF0YS5uYW1lMixcbiAgICAgICAgYWJvdXQ6IGRhdGEub2NjdXBhdGlvbixcbiAgICAgIH0pLFxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XG4gIH1cblxuICAvL9C30LDQvNC10L3QuNGC0Ywg0LDQstCw0YLQsNGAIChQQVRDSClcbiAgc2V0TmV3QXZhdGFyKGRhdGEpIHtcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVybCArIGAvdXNlcnMvbWUvYXZhdGFyYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBhdmF0YXI6IGRhdGEuYXZhdGFybGluayxcbiAgICAgIH0pLFxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XG4gIH1cblxuICAvL+KAnNC30LDQu9Cw0LnQutCw0YLRjOKAnSDQutCw0YDRgtC+0YfQutGDIChQVVQpXG4gIHNldExpa2VDYXJkKGlkKSB7XG4gICAgcmV0dXJuIGZldGNoKHRoaXMuX2Jhc2VVcmwgKyBgL2NhcmRzL2xpa2VzLyR7aWR9YCwge1xuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xuICB9XG5cbiAgLy/Rg9C00LDQu9C40YLRjCDQu9Cw0LnQuiDQutCw0YDRgtC+0YfQutC4IChERUxFVEUpXG4gIGRlbGV0ZUxpa2VDYXJkKGlkKSB7XG4gICAgcmV0dXJuIGZldGNoKHRoaXMuX2Jhc2VVcmwgKyBgL2NhcmRzL2xpa2VzLyR7aWR9YCwge1xuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xuICB9XG59XG4iLCIvLyDQutCw0YDRgtC+0YfQutC4XG5leHBvcnQgY29uc3QgaW5pdGlhbENhcmRzID0gW1xuICB7XG4gICAgbmFtZTogXCLQodGD0LvQsNC60YHQutC40Lkg0LrQsNC90YzQvtC9XCIsXG4gICAgbGluazogXCJodHRwczovL2kuaWJiLmNvL0tXTXhoNXYvcGhvdG8tMjAyMi0wNC0wNy0xNi01Mi0xNi5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwi0JTQsNGA0LPQstCw0YFcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vaS5pYmIuY28vakx5TnBzNy9waG90by0yMDIyLTA0LTA3LTE2LTUyLTU1LmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCLQkdGA0LDRgtGB0LpcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vaS5pYmIuY28vbnJ3ZG13Ry9waG90by0yMDIyLTA0LTA3LTE2LTUzLTAzLmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCLQntC70YzRhdC+0L1cIixcbiAgICBsaW5rOiBcImh0dHBzOi8vaS5pYmIuY28vR25LelhYVi9waG90by0yMDIyLTA0LTA3LTE2LTUzLTA0LmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCLQnNC40LTQsNCz0YDQsNCx0LjQvdGB0LrQuNC1INCy0L7QtNC+0L/QsNC00YtcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vaS5pYmIuY28vUjJmU0tXOC9waG90by0yMDIyLTA0LTA3LTE2LTUyLTU3LmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCLQl9Cw0YDQsNC80LDQs9GB0LrQvtC1INCy0L7QtNC+0YXRgNCw0L3QuNC70LjRidC1XCIsXG4gICAgbGluazogXCJodHRwczovL2kuaWJiLmNvLzZ5OXB3YzkvcGhvdG8tMjAyMi0wNC0wNy0xNi01Mi01OC5qcGdcIixcbiAgfSxcbl07XG5cbi8vIERPTS3RjdC70LXQvNC10L3RgtGLXG5leHBvcnQgY29uc3QgZWRpdGluZ0J1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZWRpdEJ1dHRvblwiKTsgLy8g0LrQvdC+0L/QutCwINGA0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40Y9cbmV4cG9ydCBjb25zdCBhZGRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2FkZEJ1dHRvblwiKTsgLy8g0LrQvdC+0L/QutCwINC+0YLQutGA0YvQstCw0Y7RidCw0Y8g0L/QvtC/0LDQuiDQtNC+0LHQsNCy0LvQtdC90LjRjyDQutCw0YDRgtC+0YfQutC4XG5leHBvcnQgY29uc3QgYXZhdGFyQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19waG90by1lZGl0LWJ1dHRvblwiKTsgLy8g0LrQvdC+0L/QutCwINC+0YLQutGA0YvQstCw0Y7RidCw0Y8g0L/QvtC/0LDQuiDQtNC+0LHQsNCy0LvQtdC90LjRjyDQutCw0YDRgtC+0YfQutC4XG5leHBvcnQgY29uc3QgZm9ybUVkaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zvcm1FZGl0XCIpOyAvLyDRhNC+0YDQvNCwINGA0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40Y9cbmV4cG9ydCBjb25zdCBuYW1lSW5wdXQgPSBmb3JtRWRpdC5xdWVyeVNlbGVjdG9yKFwiI25hbWVcIik7IC8vINGN0LvQtdC80LXQvdGCINCy0LLQvtC00LAg0LjQvNC10L3QuFxuZXhwb3J0IGNvbnN0IGpvYklucHV0ID0gZm9ybUVkaXQucXVlcnlTZWxlY3RvcihcIiNvY2N1cGF0aW9uXCIpOyAvLyDRjdC70LXQvNC10L3RgiDQstCy0L7QtNCwINC/0YDQvtGE0LXRgdGB0LjQuFxuZXhwb3J0IGNvbnN0IGZvcm1BZGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zvcm1BZGRcIik7IC8vINGE0L7RgNC80LAg0LTQvtCx0LDQstC70LXQvdC40Y8g0LrQsNGA0YLQvtGH0LrQuFxuZXhwb3J0IGNvbnN0IGZvcm1BdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zvcm1BdmF0YXJcIik7IC8vINGE0L7RgNC80LAg0LTQvtCx0LDQstC70LXQvdC40Y8g0LrQsNGA0YLQvtGH0LrQuFxuXG5cbi8vINCU0LvRjyDQstCw0LvQuNC00LDRhtC40LggLSDRgdC10LvQtdC60YLQvtGA0Ysg0YTQvtGA0LxcbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XG4gIGZvcm1TZWxlY3RvcjogXCIuZm9ybVwiLFxuICBpbnB1dFNlbGVjdG9yOiBcIi5mb3JtX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIuZm9ybV9fc3VibWl0XCIsXG4gIGVycm9yTWVzc2FnZTogXCJmb3JtX19lcnJvcl9hY3RpdmVcIixcbiAgZXJyb3JJbnB1dDogXCJmb3JtX19pbnB1dF9lcnJvclwiLFxuICBpbmFjdGl2ZUJ1dHRvbjogXCJmb3JtX19zdWJtaXRfaW5hY3RpdmVcIixcbn07XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcblxuaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoU3VibWl0IGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aFN1Ym1pdC5qc1wiO1xuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XG5pbXBvcnQgQXBpIGZyb20gXCIuLi9jb21wb25lbnRzL0FwaS5qc1wiO1xuXG5pbXBvcnQge1xuICBjb25maWcsXG4gIG5hbWVJbnB1dCxcbiAgam9iSW5wdXQsXG4gIGVkaXRpbmdCdXR0b24sXG4gIGF2YXRhckJ1dHRvbixcbiAgYWRkQnV0dG9uLFxuICBmb3JtRWRpdCxcbiAgZm9ybUFkZCxcbiAgZm9ybUF2YXRhcixcbn0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xuXG4vLyBBUElcbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xuICB1cmw6IFwiaHR0cHM6Ly9tZXN0by5ub21vcmVwYXJ0aWVzLmNvL3YxL2NvaG9ydC00MVwiLFxuICBoZWFkZXJzOiB7XG4gICAgYXV0aG9yaXphdGlvbjogXCJiZWJjNDE0NS0wMDFmLTQ4N2YtOGFmZC04YzIyYmJkMzg4M2JcIixcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgfSxcbn0pO1xuXG5sZXQgdXNlcklkO1xuLy/Qn9C+0LvRg9GH0LXQvdC40LUg0LTQsNC90L3Ri9GFINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC5INC4INC60LDRgNGC0L7Rh9C10Log0YEg0YHQtdGA0LLQtdGA0LBcblByb21pc2UuYWxsKFthcGkuZ2V0VXNlckRhdGEoKSwgYXBpLmdldEluaXRpYWxDYXJkcygpXSlcbiAgLnRoZW4oKFt1c2VyLCBjYXJkc10pID0+IHtcbiAgICBhbGxDYXJkcy5yZW5kZXJJdGVtcyhjYXJkcyk7XG5cbiAgICB1c2VyRGF0YS5zZXRVc2VySW5mbyh1c2VyKTtcbiAgICB1c2VyRGF0YS5zZXRVc2VyUGhvdG8odXNlcik7XG4gICAgdXNlcklkID0gdXNlci5faWQ7XG4gIH0pXG4gIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKTtcblxuXG4vL9Ca0LvQsNGB0YEg0YEg0LTQsNC90L3Ri9C80Lgg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPXG5jb25zdCB1c2VyRGF0YSA9IG5ldyBVc2VySW5mbyh7XG4gIHNlbGVjdG9yTmFtZTogXCIucHJvZmlsZV9fbmFtZVwiLFxuICBzZWxlY3RvckluZm86IFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIsXG4gIHNlbGVjdG9yQXZhdGFyOiBcIi5wcm9maWxlX19waG90b1wiLFxufSk7XG5cblxuLy/Qn9C+0L/QsNC/INGBINC40LfQvNC10L3QtdC90LjQtdC8INC00LDQvdC90YvRhSDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y9cbmNvbnN0IHBvcHVwUHJvZmlsZSA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI3BvcHVwRWRpdFwiLCAoZGF0YSkgPT4ge1xuICBwb3B1cFByb2ZpbGUuc2V0TG9hZGluZyh0cnVlKTtcbiAgYXBpXG4gICAgLnNldFVzZXJEYXRhKGRhdGEpXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gICAgICB1c2VyRGF0YS5zZXRVc2VySW5mbyhyZXMpO1xuICAgICAgcG9wdXBQcm9maWxlLmNsb3NlKCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSlcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICBwb3B1cFByb2ZpbGUuc2V0TG9hZGluZyhmYWxzZSk7XG4gICAgfSk7XG59KTtcbnBvcHVwUHJvZmlsZS5zZXRFdmVudExpc3RlbmVycygpO1xuXG4vL9Cf0L7Qv9Cw0L8g0YEg0LjQt9C80LXQvdC10L3QuNC10Lwg0LDQstCw0YLQsNGA0LBcbmNvbnN0IHBvcHVwQXZhdGFyID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIjcG9wdXBBdmF0YXJcIiwgKGRhdGEpID0+IHtcbiAgcG9wdXBBdmF0YXIuc2V0TG9hZGluZyh0cnVlKTtcbiAgYXBpXG4gICAgLnNldE5ld0F2YXRhcihkYXRhKVxuICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICB1c2VyRGF0YS5zZXRVc2VyUGhvdG8oZGF0YSk7XG4gICAgICBwb3B1cEF2YXRhci5jbG9zZSgpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgcG9wdXBBdmF0YXIuc2V0TG9hZGluZyhmYWxzZSk7XG4gICAgfSk7XG59KTtcbnBvcHVwQXZhdGFyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbi8v0KHQu9GD0YjQsNGC0LXQu9GMINC90LAg0LrQvdC+0L/QutC1INGA0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40Y8g0LDQstCw0YLQsNGA0LBcbmF2YXRhckJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBhdmF0YXJGb3JtVmFsaWQucmVzZXRWYWxpZGF0aW9uKCk7XG4gIHBvcHVwQXZhdGFyLm9wZW4oKTtcbn0pO1xuXG5cbi8v0J/QvtC/0LDQvyDRgSDQutCw0YDRgtC40L3QutC+0LlcbmNvbnN0IHBvcHVwSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIjcG9wdXBQaWNcIik7XG5wb3B1cEltYWdlLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbi8vINCk0YPQvdC60YbQuNGPINGD0LLQtdC70LjRh9C10L3QuNGPINC60LDRgNGC0LjQvdC+0Log0L/RgNC4INC60LvQuNC60LUgKNC00LvRjyDQvNGP0LPQutC+0LPQviDRgdCy0Y/Qt9GL0LLQsNC90LjRjyDRhNGD0L3QutGG0LjQuCDRgSDQutC70LDRgdGB0L7QvCBDYXJkKVxuZnVuY3Rpb24gaGFuZGxlQ2FyZENsaWNrKG5hbWUsIGxpbmspIHtcbiAgcG9wdXBJbWFnZS5vcGVuKG5hbWUsIGxpbmspO1xufVxuXG5jb25zdCBwb3B1cENvbmZpcm0gPSBuZXcgUG9wdXBXaXRoU3VibWl0KFwiI3BvcHVwQ29uXCIsIChpZCwgZWxlbWVudCkgPT4ge1xuICBoYW5kbGVEZWxldGVDbGljayhpZCwgZWxlbWVudCk7XG59KTtcbnBvcHVwQ29uZmlybS5zZXRFdmVudExpc3RlbmVycygpO1xuXG4vL9Ck0YPQvdC60YbQuNGPINGD0LTQsNC70LXQvdC40Y8g0LrQsNGA0YLQvtGH0LrQuFxuZnVuY3Rpb24gaGFuZGxlRGVsZXRlQ2xpY2soaWQsIGVsZW1lbnQpIHtcbiAgYXBpXG4gICAgLmRlbGV0ZUNhcmQoaWQpXG4gICAgLnRoZW4oKCkgPT4ge1xuICAgICAgZWxlbWVudC5yZW1vdmUoKTtcbiAgICAgIHBvcHVwQ29uZmlybS5jbG9zZSgpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xufVxuXG4vL9Ck0YPQvdC60YbQuNGPINC70LDQudC60LAg0LrQsNGA0YLQvtGH0LrQuFxuZnVuY3Rpb24gaGFuZGxlTGlrZUNsaWNrKGNhcmQsIGlzTGlrZSkge1xuICBjb25zdCBjYXJkTGlrZSA9IGlzTGlrZVxuICAgID8gYXBpLmRlbGV0ZUxpa2VDYXJkKGNhcmQuX2lkKVxuICAgIDogYXBpLnNldExpa2VDYXJkKGNhcmQuX2lkKTtcbiAgY2FyZExpa2VcbiAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICBjYXJkLnNldExpa2VDYXJkKGlzTGlrZSwgcmVzKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKTtcbn1cblxuLy/QpNGD0L3QutGG0LjRjyDRgdC+0LfQtNCw0L3QuNGPINC60LDRgNGC0L7Rh9C60LhcbmZ1bmN0aW9uIGNyZWF0ZUNhcmQoaXRlbSkge1xuICBjb25zdCBjYXJkID0gbmV3IENhcmQoXG4gICAgaXRlbSxcbiAgICBcIi5wbGFjZXMtdGVtcGxhdGVcIixcbiAgICBoYW5kbGVDYXJkQ2xpY2ssXG4gICAgeyBoYW5kbGVDb25maXJtQ2xpY2s6ICgpID0+IHBvcHVwQ29uZmlybS5vcGVuKGNhcmQuX2lkLCBjYXJkLl9lbGVtZW50KSB9LFxuICAgIGhhbmRsZUxpa2VDbGljayxcbiAgICBhcGksXG4gICAgdXNlcklkXG4gICk7XG4gIHJldHVybiBjYXJkO1xufVxuXG4vL9Ck0YPQvdC60YbQuNGPINC+0YLRgNC40YHQvtCy0LrQuCDQutCw0YDRgtC+0YfQutC4XG5mdW5jdGlvbiByZW5kZXJDYXJkKGl0ZW0pIHtcbiAgY29uc3QgY2FyZCA9IGNyZWF0ZUNhcmQoaXRlbSk7XG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gY2FyZC5nZW5lcmF0ZUNhcmQoKTtcbiAgcmV0dXJuIGNhcmRFbGVtZW50O1xufVxuXG4vLyDQodC+0LfQtNCw0L3QuNC1INGB0LXQutGG0LjQuCDRgSDQutCw0YDRgtC+0YfQutCw0LzQuFxuY29uc3QgYWxsQ2FyZHMgPSBuZXcgU2VjdGlvbihcbiAge1xuICAgIHJlbmRlcmVyOiByZW5kZXJDYXJkLFxuICB9LFxuICBcIi5wbGFjZXNcIlxuKTtcblxuXG4vLyDQn9C+0L/QsNC/INC00L7QsdCw0LLQu9C10L3QuNGPINC60LDRgNGC0L7Rh9C60LhcbmNvbnN0IHBvcHVwQ2FyZCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI3BvcHVwQWRkXCIsIChkYXRhKSA9PiB7XG4gIHBvcHVwQ2FyZC5zZXRMb2FkaW5nKHRydWUpO1xuICBhcGlcbiAgICAucG9zdENhcmQoZGF0YSlcbiAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICBjb25zdCBjYXJkID0gY3JlYXRlQ2FyZChyZXMpO1xuICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xuICAgICAgYWxsQ2FyZHMuYWRkSXRlbShjYXJkRWxlbWVudCk7XG4gICAgICBwb3B1cENhcmQuY2xvc2UoKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKVxuICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgIHBvcHVwQ2FyZC5zZXRMb2FkaW5nKGZhbHNlKTtcbiAgICB9KTtcbn0pO1xucG9wdXBDYXJkLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbi8v0KHQu9GD0YjQsNGC0LXQu9C4INC90LAg0LrQvdC+0L/QutCw0YUg0LTQu9GPINC+0YLQutGA0YvRgtC40Y8g0L/QvtC/0LDQv9C+0LIg0YDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjRjyDQv9GA0L7RhNC40LvRjyDQuCDQtNC+0LHQsNCy0LvQtdC90LjRjyDQutCw0YDRgtC40L3QutC4XG5lZGl0aW5nQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XG4gIHBvcHVwUHJvZmlsZS5vcGVuKCk7XG4gIGNvbnN0IHVzZXJEYXRhMiA9IHVzZXJEYXRhLmdldFVzZXJJbmZvKCk7XG4gIG5hbWVJbnB1dC52YWx1ZSA9IHVzZXJEYXRhMi5uYW1lO1xuICBqb2JJbnB1dC52YWx1ZSA9IHVzZXJEYXRhMi5hY3Rpdml0eTtcbiAgcHJvZmlsZUZvcm1WYWxpZC5yZXNldFZhbGlkYXRpb24oKTtcbn0pO1xuXG5hZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgY2FyZEZvcm1WYWxpZC5yZXNldFZhbGlkYXRpb24oKTtcbiAgcG9wdXBDYXJkLm9wZW4oKTtcbn0pO1xuXG4vL9CS0LDQu9C40LTQsNGG0LjRjyDRhNC+0YDQvFxuY29uc3QgcHJvZmlsZUZvcm1WYWxpZCA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1FZGl0LCBjb25maWcpO1xuY29uc3QgY2FyZEZvcm1WYWxpZCA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1BZGQsIGNvbmZpZyk7XG5jb25zdCBhdmF0YXJGb3JtVmFsaWQgPSBuZXcgRm9ybVZhbGlkYXRvcihmb3JtQXZhdGFyLCBjb25maWcpO1xuXG5wcm9maWxlRm9ybVZhbGlkLmVuYWJsZVZhbGlkYXRpb24oKTtcbmNhcmRGb3JtVmFsaWQuZW5hYmxlVmFsaWRhdGlvbigpO1xuYXZhdGFyRm9ybVZhbGlkLmVuYWJsZVZhbGlkYXRpb24oKTtcblxuXG5cbiJdLCJuYW1lcyI6WyJDYXJkIiwiZGF0YSIsInNlbGVjdG9yIiwiaGFuZGxlQ2FyZENsaWNrIiwiaGFuZGxlTGlrZUNsaWNrIiwiYXBpIiwidXNlcklkIiwiaGFuZGxlQ29uZmlybUNsaWNrIiwidGhpcyIsIl9zZWxlY3RvciIsIl9uYW1lIiwibmFtZSIsIl9pZCIsIl9vd25lcklkIiwib3duZXIiLCJfdXNlcklkIiwiX2xpbmsiLCJsaW5rIiwiX2xpa2VzIiwibGlrZXMiLCJfaGFuZGxlQ2FyZENsaWNrIiwiX2hhbmRsZUNvbmZpcm1DbGljayIsIl9oYW5kbGVMaWtlQ2xpY2siLCJfYXBpIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9saWtlQnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2dCIsInRhcmdldCIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwiX2VsZW1lbnQiLCJfY2FyZEltYWdlIiwiX2hhbmRsZUltYWdlQ2xpY2siLCJfZ2V0VGVtcGxhdGUiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJzcmMiLCJhbHQiLCJ0ZXh0Q29udGVudCIsImxlbmd0aCIsInJlbW92ZSIsImlzTGlrZSIsImxpa2VDb3VudCIsImFkZCIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtRWxlbWVudCIsIl9mb3JtIiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvbiIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2Vycm9yTWVzc2FnZSIsImVycm9yTWVzc2FnZSIsIl9lcnJvcklucHV0IiwiZXJyb3JJbnB1dCIsIl9pbmFjdGl2ZUJ1dHRvbiIsImluYWN0aXZlQnV0dG9uIiwiaW5wdXQiLCJpbnB1dE5hbWUiLCJnZXRBdHRyaWJ1dGUiLCJlcnJvckVsZW1lbnQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJzb21lIiwiaW5wdXRFbGVtZW50IiwiX2hhc0ludmFsaWRJbnB1dCIsInNldEF0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsIl90b2dnbGVCdXR0b25TdGF0ZSIsImZvckVhY2giLCJlIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsIl9zZXRMaXN0ZW5lcnMiLCJTZWN0aW9uIiwicmVuZGVyZXIiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiYXJyIiwiaXRlbSIsImNhcmQiLCJhZGRJdGVtIiwiZWxlbWVudCIsInByZXBlbmQiLCJQb3B1cCIsImtleSIsImNsb3NlIiwiX3BvcHVwIiwiX2J0bmNsb3NlIiwiX2hhbmRsZUVzY0Nsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImJpbmQiLCJfaGFuZGxlT3ZlckNsb3NlIiwiUG9wdXBXaXRoSW1hZ2UiLCJfY2FyZFBpY3R1cmUiLCJfY2FyZENhcHRpb24iLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX2Zvcm1FbGVtZW50IiwiX2Zvcm1WYWx1ZXMiLCJ2YWx1ZSIsInByZXZlbnREZWZhdWx0IiwiX2dldElucHV0VmFsdWVzIiwiaXNMb2FkaW5nIiwicmVzZXQiLCJQb3B1cFdpdGhTdWJtaXQiLCJoYW5kbGVTdWJtaXRBY3Rpb24iLCJfaGFuZGxlU3VibWl0QWN0aW9uIiwiaWQiLCJfY2FyZElkIiwiX2NhcmRFbGVtZW50IiwiX2hhbmRsZUZyb21TdWJtaXQiLCJVc2VySW5mbyIsInNlbGVjdG9yTmFtZSIsInNlbGVjdG9ySW5mbyIsInNlbGVjdG9yQXZhdGFyIiwiX3VzZXJOYW1lIiwiX3VzZXJJbmZvIiwiX3VzZXJQaG90byIsInVzZXJJbmZvIiwiYWN0aXZpdHkiLCJhdmF0YXIiLCJhYm91dCIsIkFwaSIsImNvbmZpZyIsIl9iYXNlVXJsIiwidXJsIiwiX2hlYWRlcnMiLCJoZWFkZXJzIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImZldGNoIiwibWV0aG9kIiwidGhlbiIsIl9jaGVja1Jlc3BvbnNlIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJuYW1lMiIsIm9jY3VwYXRpb24iLCJhdmF0YXJsaW5rIiwiZWRpdGluZ0J1dHRvbiIsImFkZEJ1dHRvbiIsImF2YXRhckJ1dHRvbiIsImZvcm1FZGl0IiwibmFtZUlucHV0Iiwiam9iSW5wdXQiLCJmb3JtQWRkIiwiZm9ybUF2YXRhciIsImZvcm1TZWxlY3RvciIsImF1dGhvcml6YXRpb24iLCJhbGwiLCJnZXRVc2VyRGF0YSIsImdldEluaXRpYWxDYXJkcyIsInVzZXIiLCJjYXJkcyIsImFsbENhcmRzIiwicmVuZGVySXRlbXMiLCJ1c2VyRGF0YSIsInNldFVzZXJJbmZvIiwic2V0VXNlclBob3RvIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwicG9wdXBQcm9maWxlIiwic2V0TG9hZGluZyIsInNldFVzZXJEYXRhIiwiZmluYWxseSIsInNldEV2ZW50TGlzdGVuZXJzIiwicG9wdXBBdmF0YXIiLCJzZXROZXdBdmF0YXIiLCJhdmF0YXJGb3JtVmFsaWQiLCJyZXNldFZhbGlkYXRpb24iLCJvcGVuIiwicG9wdXBJbWFnZSIsInBvcHVwQ29uZmlybSIsImRlbGV0ZUNhcmQiLCJoYW5kbGVEZWxldGVDbGljayIsImRlbGV0ZUxpa2VDYXJkIiwic2V0TGlrZUNhcmQiLCJjcmVhdGVDYXJkIiwiZ2VuZXJhdGVDYXJkIiwicG9wdXBDYXJkIiwicG9zdENhcmQiLCJjYXJkRWxlbWVudCIsInVzZXJEYXRhMiIsImdldFVzZXJJbmZvIiwicHJvZmlsZUZvcm1WYWxpZCIsImNhcmRGb3JtVmFsaWQiLCJlbmFibGVWYWxpZGF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==