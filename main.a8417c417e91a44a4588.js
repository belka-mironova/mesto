!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,c,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._selector=n,this._name=e.name,this._id=e._id,this._ownerId=e.owner._id,this._userId=a,this._link=e.link,this._likes=e.likes,this._handleCardClick=r,this._handleConfirmClick=o,this._handleLikeClick=i,this._api=c}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._selector).content.querySelector(".place").cloneNode(!0)}},{key:"_handleImageClick",value:function(){this._handleCardClick(this._name,this._link)}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(t){e._handleLikeClick(e,t.target.classList.contains("place__like_active"))})),this._element.querySelector(".place__remove").addEventListener("click",(function(){e._handleConfirmClick(e._id,e._element)})),this._cardImage.addEventListener("click",(function(){e._handleImageClick()}))}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".place__image"),this._likeButton=this._element.querySelector(".place__like"),this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._element.querySelector(".place__name").textContent=this._name,this._element.querySelector(".place__like-count").textContent=this._likes.length,this._ownerId!==this._userId&&this._element.querySelector(".place__remove").remove(),this._element}},{key:"setLikeCard",value:function(e,t){this._likeButton=this._element.querySelector(".place__like"),this.likeCount=this._element.querySelector(".place__like-count"),e?(this._likeButton.classList.remove("place__like_active"),this.likeCount.textContent=t.likes.length):(this._likeButton.classList.add("place__like_active"),this.likeCount.textContent=t.likes.length)}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=t,this._inputList=Array.from(t.querySelectorAll(n.inputSelector)),this._submitButton=t.querySelector(n.submitButtonSelector),this._errorMessage=n.errorMessage,this._errorInput=n.errorInput,this._inactiveButton=n.inactiveButton}var t,r;return t=e,(r=[{key:"_showInputError",value:function(e){var t=e.getAttribute("name"),n=this._form.querySelector("#".concat(t,"-error"));e.classList.add(this._errorInput),n.textContent=e.validationMessage,n.classList.add(this._errorMessage)}},{key:"_hideInputError",value:function(e){var t=e.getAttribute("name"),n=this._form.querySelector("#".concat(t,"-error"));e.classList.remove(this._errorInput),n.classList.remove(this._errorMessage),n.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButton),this._submitButton.setAttribute("disabled",!0)):(this._submitButton.classList.remove(this._inactiveButton),this._submitButton.removeAttribute("disabled",!0))}},{key:"_setListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(n){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"enableValidation",value:function(){this._setListeners()}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){var n=t._renderer(e);t.addItem(n)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var u=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),a(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),a(this,"_handleOverClose",(function(e){e.target.classList.contains("popup")&&n.close()})),this._popup=document.querySelector(t),this._btnclose=this._popup.querySelector(".popup__close")}var t,n;return t=e,(n=[{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("popup_opened")}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("popup_opened")}},{key:"setEventListeners",value:function(){this._btnclose.addEventListener("click",this.close.bind(this)),this._popup.addEventListener("mousedown",this._handleOverClose)}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=p(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}function h(e,t){return h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},h(e,t)}function y(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function c(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,e))._cardPicture=document.querySelector(".popup__image"),t._cardCaption=document.querySelector(".popup__caption"),t}return t=c,(n=[{key:"open",value:function(e,t){f(d(c.prototype),"open",this).call(this),this._cardPicture.src=t,this._cardPicture.alt=e,this._cardCaption.textContent=e}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(u);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=k(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},b.apply(this,arguments)}function k(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}function g(e,t){return g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},g(e,t)}function w(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function c(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(r=i.call(this,e))._handleFormSubmit=t,r._api=n,r._formElement=r._popup.querySelector(".form"),r._inputList=r._popup.querySelectorAll(".form__input"),r._submitButton=r._popup.querySelector(".form__submit"),r}return t=c,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){return e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;b(E(c.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues()),e.close()}))}},{key:"setLoading",value:function(e){this._submitButton.value=e?"Сохранение...":"Сохранить"}},{key:"close",value:function(){b(E(c.prototype),"close",this).call(this),this._formElement.reset()}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(u);function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=P(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},C.apply(this,arguments)}function P(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=R(e)););return e}function j(e,t){return j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},j(e,t)}function I(e,t){if(t&&("object"===S(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function R(e){return R=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},R(e)}var q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&j(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=R(r);if(o){var n=R(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e))._formElement=n._popup.querySelector(".form"),n._submitButton=n._formElement.querySelector(".form__submit"),n._handleFormSubmit=t,n}return t=c,(n=[{key:"setEventListeners",value:function(){var e=this;C(R(c.prototype),"setEventListeners",this).call(this),this._submitButton.addEventListener("submit",(function(t){t.preventDefault(),e._handleFromSubmit(),e.close()}))}}])&&L(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(u);function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(){function e(t){var n=t.selectorName,r=t.selectorInfo,o=t.selectorAvatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(n),this._userInfo=document.querySelector(r),this._userPhoto=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){var e={};return e.name=this._userName.textContent,e.activity=this._userInfo.textContent,e.avatar=this._userPhoto.src,e}},{key:"setUserInfo",value:function(e){this._userName.textContent=e.name,this._userInfo.textContent=e.about}},{key:"setUserPhoto",value:function(e){this._userPhoto.src=e.avatar}}])&&B(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var x,A=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.url,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getInitialCards",value:function(){return fetch(this._baseUrl+"/cards",{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"postCard",value:function(e){return fetch(this._baseUrl+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"getUserData",value:function(){return fetch(this._baseUrl+"/users/me",{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"setUserData",value:function(e){return fetch(this._baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name2,about:e.occupation})}).then(this._checkResponse)}},{key:"setNewAvatar",value:function(e){return fetch(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatarlink})}).then(this._checkResponse)}},{key:"setLikeCard",value:function(e){return fetch(this._baseUrl+"/cards/likes/".concat(e),{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"deleteLikeCard",value:function(e){return fetch(this._baseUrl+"/cards/likes/".concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),V=document.querySelector("#editButton"),D=document.querySelector("#addButton"),N=document.querySelector(".profile__photo-edit-button"),M=document.querySelector("#formEdit"),F=M.querySelector("#name"),J=M.querySelector("#occupation"),G=document.querySelector("#formAdd"),H=document.querySelector("#formAvatar"),z={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",errorMessage:"form__error_active",errorInput:"form__input_error",inactiveButton:"form__submit_inactive"},K=new A({url:"https://mesto.nomoreparties.co/v1/cohort-41",headers:{authorization:"bebc4145-001f-487f-8afd-8c22bbd3883b","Content-Type":"application/json"}}),Q=new T({selectorName:".profile__name",selectorInfo:".profile__description",selectorAvatar:".profile__photo"});K.getUserData().then((function(e){Q.setUserInfo(e),Q.setUserPhoto(e),x=e._id}));var W=new O("#popupEdit",(function(e){W.setLoading(!0),K.setUserData(e).then((function(t){console.log(e),Q.setUserInfo(t),W.close()})).catch((function(e){return console.log(e)})).finally((function(){W.setLoading(!1)}))}));W.setEventListeners();var X=new O("#popupAvatar",(function(e){X.setLoading(!0),K.setNewAvatar(e).then((function(e){Q.setUserPhoto(e),X.close()})).catch((function(e){return console.log(e)})).finally((function(){X.setLoading(!1)}))}));X.setEventListeners(),N.addEventListener("click",(function(){ue.resetValidation(),X.open()}));var Y=K.getInitialCards(),Z=new _("#popupPic");function $(e,t){Z.open(e,t)}Z.setEventListeners();var ee=new q("#popupCon",(function(e,t){K.deleteCard(e).then((function(){t.remove(),ee.close()})).catch((function(e){return console.log(e)}))}));function te(){ee.open(),ee.setEventListeners()}function ne(e,t){(t?K.deleteLikeCard(e._id):K.setLikeCard(e._id)).then((function(n){e.setLikeCard(t,n)})).catch((function(e){return console.log(e)}))}function re(e){return new t(e,".places-template",$,te,ne,K,x)}var oe=new i({renderer:function(e){return re(e).generateCard()}},".places");Y.then((function(e){oe.renderItems(e)})).catch((function(e){console.log(e)}));var ie=new O("#popupAdd",(function(e){ie.setLoading(!0),K.postCard(e).then((function(e){var t=re(e).generateCard();oe.addItem(t),ie.close()})).catch((function(e){return console.log(e)})).finally((function(){ie.setLoading(!1)}))}));ie.setEventListeners(),V.addEventListener("click",(function(){W.open();var e=Q.getUserInfo();F.value=e.name,J.value=e.activity,ce.resetValidation()})),D.addEventListener("click",(function(){ae.resetValidation(),ie.open()}));var ce=new r(M,z),ae=new r(G,z),ue=new r(H,z);ce.enableValidation(),ae.enableValidation(),ue.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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U2pHLFFBQVF1RyxHQUNqQkYsR0FBVWhHLFdBRVgyRSxPQUFNLFNBQUNDLEdBQUQsT0FBU0gsUUFBUUMsSUFBSUUsTUFDM0JDLFNBQVEsV0FDUG1CLEdBQVV6QixZQUFXLFNBRzNCeUIsR0FBVWxCLG9CQUdWdEIsRUFBY3pILGlCQUFpQixTQUFTLFdBQ3RDdUksRUFBYWEsT0FDYixJQUFNZ0IsRUFBWWpDLEVBQVNrQyxjQUMzQnhDLEVBQVU3QyxNQUFRb0YsRUFBVXRMLEtBQzVCZ0osRUFBUzlDLE1BQVFvRixFQUFVckUsU0FDM0J1RSxHQUFpQm5CLHFCQUduQnpCLEVBQVUxSCxpQkFBaUIsU0FBUyxXQUNsQ3VLLEdBQWNwQixrQkFDZGMsR0FBVWIsVUFJWixJQUFNa0IsR0FBbUIsSUFBSXBKLEVBQWMwRyxFQUFVekIsR0FDL0NvRSxHQUFnQixJQUFJckosRUFBYzZHLEVBQVM1QixHQUMzQytDLEdBQWtCLElBQUloSSxFQUFjOEcsRUFBWTdCLEdBRXREbUUsR0FBaUJFLG1CQUNqQkQsR0FBY0MsbUJBQ2R0QixHQUFnQnNCLG1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aFN1Ym1pdC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcbiAgY29uc3RydWN0b3IoXG4gICAgZGF0YSxcbiAgICBzZWxlY3RvcixcbiAgICBoYW5kbGVDYXJkQ2xpY2ssXG4gICAgaGFuZGxlQ29uZmlybUNsaWNrLFxuICAgIGhhbmRsZUxpa2VDbGljayxcbiAgICBhcGksXG4gICAgdXNlcklkXG4gICkge1xuICAgIHRoaXMuX3NlbGVjdG9yID0gc2VsZWN0b3I7XG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcbiAgICB0aGlzLl9pZCA9IGRhdGEuX2lkO1xuICAgIHRoaXMuX293bmVySWQgPSBkYXRhLm93bmVyLl9pZDtcbiAgICB0aGlzLl91c2VySWQgPSB1c2VySWQ7XG4gICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcbiAgICB0aGlzLl9saWtlcyA9IGRhdGEubGlrZXM7XG4gICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xuICAgIHRoaXMuX2hhbmRsZUNvbmZpcm1DbGljayA9IGhhbmRsZUNvbmZpcm1DbGljaztcbiAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2sgPSBoYW5kbGVMaWtlQ2xpY2s7XG5cbiAgICB0aGlzLl9hcGkgPSBhcGk7XG4gIH1cblxuICAvL9C/0L7Qu9GD0YfQtdC90LjQtSDRgtC10LzQv9C70LXQudGC0LBcbiAgX2dldFRlbXBsYXRlKCkge1xuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX3NlbGVjdG9yKVxuICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5wbGFjZVwiKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcbiAgICByZXR1cm4gY2FyZEVsZW1lbnQ7XG4gIH1cblxuXG4gIC8v0LzQtdGC0L7QtCwg0L7RgtCy0LXRh9Cw0Y7RidC40Lkg0LfQsCDQvdCw0LbQsNGC0LjQtSDQvdCwINC60LDRgNGC0LjQvdC60YNcbiAgX2hhbmRsZUltYWdlQ2xpY2soKSB7XG4gICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrKHRoaXMuX25hbWUsIHRoaXMuX2xpbmspO1xuICB9XG5cbiAgLy/Rg9GB0YLQsNC90L7QstC60LAg0YHQu9GD0YjQsNGC0LXQu9C10LlcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2xpa2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayhcbiAgICAgICAgdGhpcyxcbiAgICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJwbGFjZV9fbGlrZV9hY3RpdmVcIilcbiAgICAgICk7XG4gICAgfSk7XG5cbiAgICB0aGlzLl9lbGVtZW50XG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5wbGFjZV9fcmVtb3ZlXCIpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgdGhpcy5faGFuZGxlQ29uZmlybUNsaWNrKHRoaXMuX2lkLCB0aGlzLl9lbGVtZW50KTtcbiAgICAgIH0pO1xuXG4gICAgdGhpcy5fY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrKCk7XG4gICAgfSk7XG4gIH1cblxuICAvL9Cz0LXQvdC10YDQsNGG0LjRjyDQutCw0YDRgtC+0YfQtdC6XG4gIGdlbmVyYXRlQ2FyZCgpIHtcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcbiAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX2ltYWdlXCIpO1xuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX2xpa2VcIik7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuICAgIHRoaXMuX2NhcmRJbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xuICAgIHRoaXMuX2NhcmRJbWFnZS5hbHQgPSB0aGlzLl9uYW1lO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbGFjZV9fbmFtZVwiKS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG5cbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX2xpa2UtY291bnRcIikudGV4dENvbnRlbnQgPVxuICAgICAgdGhpcy5fbGlrZXMubGVuZ3RoO1xuXG4gICAgaWYgKCEodGhpcy5fb3duZXJJZCA9PT0gdGhpcy5fdXNlcklkKSkge1xuICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlX19yZW1vdmVcIikucmVtb3ZlKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XG4gIH1cblxuLy/QvNC10YLQvtC0LCDQvtGC0LLQtdGH0LDRjtGJ0LjQuSDQt9CwINC40LfQvNC10L3QtdC90LjRjyDQstC10YDRgdC60Lgg0L/RgNC4INC90LDQttCw0YLQuNC4INC90LAg0LrQvdC+0L/QutGDINC70LDQudC60LBcbnNldExpa2VDYXJkKGlzTGlrZSwgZGF0YSkge1xuICB0aGlzLl9saWtlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlX19saWtlXCIpO1xuICB0aGlzLmxpa2VDb3VudCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbGFjZV9fbGlrZS1jb3VudFwiKTtcblxuICBpZiAoIWlzTGlrZSkge1xuICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmFkZChcInBsYWNlX19saWtlX2FjdGl2ZVwiKTtcbiAgICB0aGlzLmxpa2VDb3VudC50ZXh0Q29udGVudCA9IGRhdGEubGlrZXMubGVuZ3RoO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LnJlbW92ZShcInBsYWNlX19saWtlX2FjdGl2ZVwiKTtcbiAgICB0aGlzLmxpa2VDb3VudC50ZXh0Q29udGVudCA9IGRhdGEubGlrZXMubGVuZ3RoO1xuICB9XG59XG5cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3Rvcihmb3JtRWxlbWVudCwgZGF0YSkge1xuICAgIHRoaXMuX2Zvcm0gPSBmb3JtRWxlbWVudDtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKFxuICAgICAgZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChkYXRhLmlucHV0U2VsZWN0b3IpXG4gICAgKTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGRhdGEuc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xuICAgIHRoaXMuX2Vycm9yTWVzc2FnZSA9IGRhdGEuZXJyb3JNZXNzYWdlO1xuICAgIHRoaXMuX2Vycm9ySW5wdXQgPSBkYXRhLmVycm9ySW5wdXQ7XG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b24gPSBkYXRhLmluYWN0aXZlQnV0dG9uO1xuICB9XG4gIC8v0L/QvtC60LDQt9GL0LLQsNC10Lwg0L7RiNC40LHQutGDXG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dCkge1xuICAgIGNvbnN0IGlucHV0TmFtZSA9IGlucHV0LmdldEF0dHJpYnV0ZShcIm5hbWVcIik7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dE5hbWV9LWVycm9yYCk7XG4gICAgaW5wdXQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvcklucHV0KTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBpbnB1dC52YWxpZGF0aW9uTWVzc2FnZTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvck1lc3NhZ2UpO1xuICB9XG5cbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0KSB7XG4gICAgY29uc3QgaW5wdXROYW1lID0gaW5wdXQuZ2V0QXR0cmlidXRlKFwibmFtZVwiKTtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0TmFtZX0tZXJyb3JgKTtcbiAgICBpbnB1dC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9ySW5wdXQpO1xuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yTWVzc2FnZSk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcbiAgfVxuXG4gIC8vINC/0YDQvtCy0LXRgNC60LAg0LLQsNC70LjQtNCw0YbQuNC4XG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXQpIHtcbiAgICBpZiAoIWlucHV0LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dCwgaW5wdXQudmFsaWRhdGlvbk1lc3NhZ2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dCk7XG4gICAgfVxuICB9XG5cbiAgX2hhc0ludmFsaWRJbnB1dCgpIHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XG4gICAgfSk7XG4gIH1cblxuICBfdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCgpKSB7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbik7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIiwgdHJ1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uKTtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLCB0cnVlKTtcbiAgICB9XG4gIH1cblxuICBfc2V0TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoZSkgPT4ge1xuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgcmVzZXRWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICB9KTtcbiAgfVxuXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fc2V0TGlzdGVuZXJzKCk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7cmVuZGVyZXJ9LCBzZWxlY3RvciApIHtcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xuICB9XG4gIHJlbmRlckl0ZW1zKGFycikge1xuICAgIGFyci5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgY29uc3QgY2FyZCA9IHRoaXMuX3JlbmRlcmVyKGl0ZW0pOyBcbiAgICAgIHRoaXMuYWRkSXRlbShjYXJkKTt9KTtcbiAgfVxuXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTtcbiAgICB0aGlzLl9idG5jbG9zZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Nsb3NlXCIpO1xuICB9XG4gIG9wZW4oKSB7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9vcGVuZWRcIik7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwX29wZW5lZFwiKTtcbiAgfVxuXG4gIF9oYW5kbGVFc2NDbG9zZSA9IChldnQpID0+IHtcbiAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbiAgfTtcblxuICBfaGFuZGxlT3ZlckNsb3NlID0gKGV2dCkgPT4ge1xuICAgIGlmIChldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwXCIpKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9O1xuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2J0bmNsb3NlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmNsb3NlLmJpbmQodGhpcykpO1xuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgdGhpcy5faGFuZGxlT3ZlckNsb3NlKTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3RvcihzZWxlY3Rvcikge1xuICAgIHN1cGVyKHNlbGVjdG9yKTtcbiAgICB0aGlzLl9jYXJkUGljdHVyZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltYWdlXCIpO1xuICAgIHRoaXMuX2NhcmRDYXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fY2FwdGlvblwiKTtcbiAgfVxuXG4gIG9wZW4obmFtZSwgc3JjKSB7XG4gICAgc3VwZXIub3BlbigpO1xuICAgIHRoaXMuX2NhcmRQaWN0dXJlLnNyYyA9IHNyYztcbiAgICB0aGlzLl9jYXJkUGljdHVyZS5hbHQgPSBuYW1lO1xuICAgIHRoaXMuX2NhcmRDYXB0aW9uLnRleHRDb250ZW50ID0gbmFtZTtcbiAgfVxufVxuXG5cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3RvcihzZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCwgYXBpKSB7XG4gICAgc3VwZXIoc2VsZWN0b3IpO1xuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xuICAgIHRoaXMuX2FwaSA9IGFwaTtcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybVwiKTtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yQWxsKFwiLmZvcm1fX2lucHV0XCIpO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybV9fc3VibWl0XCIpO1xuICB9XG5cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIHRoaXMuX2Zvcm1WYWx1ZXMgPSB7fTtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChcbiAgICAgIChpbnB1dCkgPT4gKHRoaXMuX2Zvcm1WYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZSlcbiAgICApO1xuICAgIHJldHVybiB0aGlzLl9mb3JtVmFsdWVzO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9mb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9KTtcbiAgfVxuXG4gIHNldExvYWRpbmcoaXNMb2FkaW5nKXtcbiAgICBpZihpc0xvYWRpbmcpe1xuICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b24udmFsdWUgPSBcItCh0L7RhdGA0LDQvdC10L3QuNC1Li4uXCI7XG4gICAgfVxuICAgIGVsc2V7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24udmFsdWUgPSBcItCh0L7RhdGA0LDQvdC40YLRjFwiO1xuICAgIH1cbn1cblxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50LnJlc2V0KCk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhTdWJtaXQgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XG4gICAgc3VwZXIoc2VsZWN0b3IpO1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5mb3JtXCIpO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybV9fc3VibWl0XCIpO1xuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuX2hhbmRsZUZyb21TdWJtaXQoKTtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9KTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3Rvcih7IHNlbGVjdG9yTmFtZSwgc2VsZWN0b3JJbmZvLCBzZWxlY3RvckF2YXRhciB9KSB7XG4gICAgdGhpcy5fdXNlck5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yTmFtZSk7XG4gICAgdGhpcy5fdXNlckluZm8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9ySW5mbyk7XG4gICAgdGhpcy5fdXNlclBob3RvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvckF2YXRhcik7XG4gIH1cblxuICBnZXRVc2VySW5mbygpIHtcbiAgICBjb25zdCB1c2VySW5mbyA9IHt9O1xuICAgIHVzZXJJbmZvLm5hbWUgPSB0aGlzLl91c2VyTmFtZS50ZXh0Q29udGVudDtcbiAgICB1c2VySW5mby5hY3Rpdml0eSA9IHRoaXMuX3VzZXJJbmZvLnRleHRDb250ZW50O1xuICAgIHVzZXJJbmZvLmF2YXRhciA9IHRoaXMuX3VzZXJQaG90by5zcmM7XG5cbiAgICByZXR1cm4gdXNlckluZm87XG4gIH1cblxuICBzZXRVc2VySW5mbyhkYXRhKSB7XG4gICAgdGhpcy5fdXNlck5hbWUudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XG4gICAgdGhpcy5fdXNlckluZm8udGV4dENvbnRlbnQgPSBkYXRhLmFib3V0O1xuICB9XG5cbiAgc2V0VXNlclBob3RvKGRhdGEpIHtcbiAgICB0aGlzLl91c2VyUGhvdG8uc3JjID0gZGF0YS5hdmF0YXI7XG4gIH1cbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xuXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcbmltcG9ydCBQb3B1cFdpdGhTdWJtaXQgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoU3VibWl0LmpzXCI7XG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcbmltcG9ydCBBcGkgZnJvbSBcIi4uL2NvbXBvbmVudHMvQXBpLmpzXCI7XG5cbmltcG9ydCB7XG4gIGNvbmZpZyxcbiAgbmFtZUlucHV0LFxuICBqb2JJbnB1dCxcbiAgZWRpdGluZ0J1dHRvbixcbiAgYXZhdGFyQnV0dG9uLFxuICBhZGRCdXR0b24sXG4gIGZvcm1FZGl0LFxuICBmb3JtQWRkLFxuICBmb3JtQXZhdGFyLFxufSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XG5cbi8vIEFQSVxuY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gIHVybDogXCJodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTQxXCIsXG4gIGhlYWRlcnM6IHtcbiAgICBhdXRob3JpemF0aW9uOiBcImJlYmM0MTQ1LTAwMWYtNDg3Zi04YWZkLThjMjJiYmQzODgzYlwiLFxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICB9LFxufSk7XG5cbi8v0JrQu9Cw0YHRgSDRgSDQtNCw0L3QvdGL0LzQuCDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y9cbmNvbnN0IHVzZXJEYXRhID0gbmV3IFVzZXJJbmZvKHtcbiAgc2VsZWN0b3JOYW1lOiBcIi5wcm9maWxlX19uYW1lXCIsXG4gIHNlbGVjdG9ySW5mbzogXCIucHJvZmlsZV9fZGVzY3JpcHRpb25cIixcbiAgc2VsZWN0b3JBdmF0YXI6IFwiLnByb2ZpbGVfX3Bob3RvXCIsXG59KTtcblxuLy/Qn9C+0LvRg9GH0LXQvdC40LUg0LTQsNC90L3Ri9GFINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC5INGBINGB0LXRgNCy0LXRgNCwXG5sZXQgdXNlcklkO1xuXG5hcGkuZ2V0VXNlckRhdGEoKS50aGVuKChyZXMpID0+IHtcbiAgdXNlckRhdGEuc2V0VXNlckluZm8ocmVzKTtcbiAgdXNlckRhdGEuc2V0VXNlclBob3RvKHJlcyk7XG4gIHVzZXJJZCA9IHJlcy5faWQ7XG59KTtcblxuLy/Qn9C+0L/QsNC/INGBINC40LfQvNC10L3QtdC90LjQtdC8INC00LDQvdC90YvRhSDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y9cbmNvbnN0IHBvcHVwUHJvZmlsZSA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI3BvcHVwRWRpdFwiLCAoZGF0YSkgPT4ge1xuICBwb3B1cFByb2ZpbGUuc2V0TG9hZGluZyh0cnVlKTtcbiAgYXBpXG4gICAgLnNldFVzZXJEYXRhKGRhdGEpXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gICAgICB1c2VyRGF0YS5zZXRVc2VySW5mbyhyZXMpO1xuICAgICAgcG9wdXBQcm9maWxlLmNsb3NlKCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSlcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICBwb3B1cFByb2ZpbGUuc2V0TG9hZGluZyhmYWxzZSk7XG4gICAgfSk7XG59KTtcbnBvcHVwUHJvZmlsZS5zZXRFdmVudExpc3RlbmVycygpO1xuXG4vL9Cf0L7Qv9Cw0L8g0YEg0LjQt9C80LXQvdC10L3QuNC10Lwg0LDQstCw0YLQsNGA0LBcbmNvbnN0IHBvcHVwQXZhdGFyID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIjcG9wdXBBdmF0YXJcIiwgKGRhdGEpID0+IHtcbiAgcG9wdXBBdmF0YXIuc2V0TG9hZGluZyh0cnVlKTtcbiAgYXBpXG4gICAgLnNldE5ld0F2YXRhcihkYXRhKVxuICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICB1c2VyRGF0YS5zZXRVc2VyUGhvdG8oZGF0YSk7XG4gICAgICBwb3B1cEF2YXRhci5jbG9zZSgpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgcG9wdXBBdmF0YXIuc2V0TG9hZGluZyhmYWxzZSk7XG4gICAgfSk7XG59KTtcbnBvcHVwQXZhdGFyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbi8v0KHQu9GD0YjQsNGC0LXQu9GMINC90LAg0LrQvdC+0L/QutC1INGA0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40Y8g0LDQstCw0YLQsNGA0LBcbmF2YXRhckJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBhdmF0YXJGb3JtVmFsaWQucmVzZXRWYWxpZGF0aW9uKCk7XG4gIHBvcHVwQXZhdGFyLm9wZW4oKTtcbn0pO1xuXG4vL9Cf0L7Qu9GD0YfQtdC90LjQtSDQutCw0YDRgtC+0YfQtdC6INGBINGB0LXRgNCy0LXRgNCwXG5jb25zdCBjYXJkcyA9IGFwaS5nZXRJbml0aWFsQ2FyZHMoKTtcblxuLy/Qn9C+0L/QsNC/INGBINC60LDRgNGC0LjQvdC60L7QuVxuY29uc3QgcG9wdXBJbWFnZSA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIiNwb3B1cFBpY1wiKTtcbnBvcHVwSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuLy8g0KTRg9C90LrRhtC40Y8g0YPQstC10LvQuNGH0LXQvdC40Y8g0LrQsNGA0YLQuNC90L7QuiDQv9GA0Lgg0LrQu9C40LrQtSAo0LTQu9GPINC80Y/Qs9C60L7Qs9C+INGB0LLRj9C30YvQstCw0L3QuNGPINGE0YPQvdC60YbQuNC4INGBINC60LvQsNGB0YHQvtC8IENhcmQpXG5mdW5jdGlvbiBoYW5kbGVDYXJkQ2xpY2sobmFtZSwgbGluaykge1xuICBwb3B1cEltYWdlLm9wZW4obmFtZSwgbGluayk7XG59XG5cbmNvbnN0IHBvcHVwQ29uZmlybSA9IG5ldyBQb3B1cFdpdGhTdWJtaXQoXCIjcG9wdXBDb25cIiwgaGFuZGxlRGVsZXRlQ2xpY2spO1xuXG5cbi8v0KTRg9C90LrRhtC40Y8g0YPQtNCw0LvQtdC90LjRjyDQutCw0YDRgtC+0YfQutC4XG5mdW5jdGlvbiBoYW5kbGVEZWxldGVDbGljayhpZCwgZWxlbWVudCkge1xuICBhcGlcbiAgICAuZGVsZXRlQ2FyZChpZClcbiAgICAudGhlbigoKSA9PiB7XG4gICAgICBlbGVtZW50LnJlbW92ZSgpO1xuICAgICAgcG9wdXBDb25maXJtLmNsb3NlKCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSk7XG59XG5cbi8v0KTRg9C90LrRhtC40Y8g0L/QvtC00YLQstC10YDQttC00LXQvdC40Y8g0YPQtNCw0LvQtdC90LjRj1xuZnVuY3Rpb24gaGFuZGxlQ29uZmlybUNsaWNrKCkge1xuICBwb3B1cENvbmZpcm0ub3BlbigpO1xuICBwb3B1cENvbmZpcm0uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbn1cblxuXG5cbi8v0KTRg9C90LrRhtC40Y8g0LvQsNC50LrQsCDQutCw0YDRgtC+0YfQutC4XG5mdW5jdGlvbiBoYW5kbGVMaWtlQ2xpY2soY2FyZCwgaXNMaWtlKSB7XG4gIGNvbnN0IGNhcmRMaWtlID0gaXNMaWtlXG4gICAgPyBhcGkuZGVsZXRlTGlrZUNhcmQoY2FyZC5faWQpXG4gICAgOiBhcGkuc2V0TGlrZUNhcmQoY2FyZC5faWQpO1xuICBjYXJkTGlrZVxuICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgIGNhcmQuc2V0TGlrZUNhcmQoaXNMaWtlLCByZXMpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xufVxuXG4vL9Ck0YPQvdC60YbQuNGPINGB0L7Qt9C00LDQvdC40Y8g0LrQsNGA0YLQvtGH0LrQuFxuZnVuY3Rpb24gY3JlYXRlQ2FyZChpdGVtKSB7XG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcbiAgICBpdGVtLFxuICAgIFwiLnBsYWNlcy10ZW1wbGF0ZVwiLFxuICAgIGhhbmRsZUNhcmRDbGljayxcbiAgICBoYW5kbGVDb25maXJtQ2xpY2ssXG4gICAgaGFuZGxlTGlrZUNsaWNrLFxuICAgIGFwaSxcbiAgICB1c2VySWRcbiAgKTtcbiAgcmV0dXJuIGNhcmQ7XG59XG5cbi8v0KTRg9C90LrRhtC40Y8g0L7RgtGA0LjRgdC+0LLQutC4INC60LDRgNGC0L7Rh9C60LhcbmZ1bmN0aW9uIHJlbmRlckNhcmQoaXRlbSkge1xuICBjb25zdCBjYXJkID0gY3JlYXRlQ2FyZChpdGVtKTtcbiAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xuICByZXR1cm4gY2FyZEVsZW1lbnQ7XG59XG5cbi8vINCh0L7Qt9C00LDQvdC40LUg0YHQtdC60YbQuNC4INGBINC60LDRgNGC0L7Rh9C60LDQvNC4XG5jb25zdCBhbGxDYXJkcyA9IG5ldyBTZWN0aW9uKFxuICB7XG4gICAgcmVuZGVyZXI6IHJlbmRlckNhcmQsXG4gIH0sXG4gIFwiLnBsYWNlc1wiXG4pO1xuXG4vLyDQntGC0YDQuNGB0L7QstC60LAg0LrQsNGA0YLQvtGH0LXQulxuY2FyZHNcbiAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgIGFsbENhcmRzLnJlbmRlckl0ZW1zKHJlc3VsdCk7XG4gIH0pXG4gIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyKTsgLy8g0LLRi9Cy0LXQtNC10Lwg0L7RiNC40LHQutGDINCyINC60L7QvdGB0L7Qu9GMXG4gIH0pO1xuXG4vLyDQn9C+0L/QsNC/INC00L7QsdCw0LLQu9C10L3QuNGPINC60LDRgNGC0L7Rh9C60LhcbmNvbnN0IHBvcHVwQ2FyZCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI3BvcHVwQWRkXCIsIChkYXRhKSA9PiB7XG4gIHBvcHVwQ2FyZC5zZXRMb2FkaW5nKHRydWUpO1xuICBhcGlcbiAgICAucG9zdENhcmQoZGF0YSlcbiAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICBjb25zdCBjYXJkID0gY3JlYXRlQ2FyZChyZXMpO1xuICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xuICAgICAgYWxsQ2FyZHMuYWRkSXRlbShjYXJkRWxlbWVudCk7XG4gICAgICBwb3B1cENhcmQuY2xvc2UoKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKVxuICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgIHBvcHVwQ2FyZC5zZXRMb2FkaW5nKGZhbHNlKTtcbiAgICB9KTtcbn0pO1xucG9wdXBDYXJkLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbi8v0KHQu9GD0YjQsNGC0LXQu9C4INC90LAg0LrQvdC+0L/QutCw0YUg0LTQu9GPINC+0YLQutGA0YvRgtC40Y8g0L/QvtC/0LDQv9C+0LIg0YDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjRjyDQv9GA0L7RhNC40LvRjyDQuCDQtNC+0LHQsNCy0LvQtdC90LjRjyDQutCw0YDRgtC40L3QutC4XG5lZGl0aW5nQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XG4gIHBvcHVwUHJvZmlsZS5vcGVuKCk7XG4gIGNvbnN0IHVzZXJEYXRhMiA9IHVzZXJEYXRhLmdldFVzZXJJbmZvKCk7XG4gIG5hbWVJbnB1dC52YWx1ZSA9IHVzZXJEYXRhMi5uYW1lO1xuICBqb2JJbnB1dC52YWx1ZSA9IHVzZXJEYXRhMi5hY3Rpdml0eTtcbiAgcHJvZmlsZUZvcm1WYWxpZC5yZXNldFZhbGlkYXRpb24oKTtcbn0pO1xuXG5hZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgY2FyZEZvcm1WYWxpZC5yZXNldFZhbGlkYXRpb24oKTtcbiAgcG9wdXBDYXJkLm9wZW4oKTtcbn0pO1xuXG4vL9CS0LDQu9C40LTQsNGG0LjRjyDRhNC+0YDQvFxuY29uc3QgcHJvZmlsZUZvcm1WYWxpZCA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1FZGl0LCBjb25maWcpO1xuY29uc3QgY2FyZEZvcm1WYWxpZCA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1BZGQsIGNvbmZpZyk7XG5jb25zdCBhdmF0YXJGb3JtVmFsaWQgPSBuZXcgRm9ybVZhbGlkYXRvcihmb3JtQXZhdGFyLCBjb25maWcpO1xuXG5wcm9maWxlRm9ybVZhbGlkLmVuYWJsZVZhbGlkYXRpb24oKTtcbmNhcmRGb3JtVmFsaWQuZW5hYmxlVmFsaWRhdGlvbigpO1xuYXZhdGFyRm9ybVZhbGlkLmVuYWJsZVZhbGlkYXRpb24oKTtcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgIHRoaXMuX2Jhc2VVcmwgPSBjb25maWcudXJsO1xuICAgIHRoaXMuX2hlYWRlcnMgPSBjb25maWcuaGVhZGVycztcbiAgfVxuXG4gIC8v0L/RgNC40LLQsNGC0L3QsNGPINGE0YPQvdC60YbQuNGPINC/0YDQvtCy0LXRgNC60Lgg0L7RgtCy0LXRgtCwXG4gIF9jaGVja1Jlc3BvbnNlKHJlcykge1xuICAgIGlmIChyZXMub2spIHtcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgIH1cbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gIH1cblxuICAvL9C/0L7Qu9GD0YfQuNGC0Ywg0LrQsNGA0YLQvtGH0LrQuCDRgSDRgdC10YDQstC10YDQsCAoR0VUKVxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XG4gICAgcmV0dXJuIGZldGNoKHRoaXMuX2Jhc2VVcmwgKyBcIi9jYXJkc1wiLCB7XG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XG4gIH1cblxuICAvL9C00L7QsdCw0LLQuNGC0Ywg0LrQsNGA0YLQvtGH0LrRgyAoUE9TVClcbiAgcG9zdENhcmQoZGF0YSkge1xuICAgIHJldHVybiBmZXRjaCh0aGlzLl9iYXNlVXJsICsgXCIvY2FyZHNcIiwge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IG5hbWU6IGRhdGEubmFtZSwgbGluazogZGF0YS5saW5rIH0pLFxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XG4gIH1cblxuICAvL9GD0LTQsNC70LjRgtGMINC60LDRgNGC0L7Rh9C60YMgKERFTEVURSlcbiAgZGVsZXRlQ2FyZChpZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2lkfWAsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcbiAgfVxuXG4gIC8v0L/QvtC70YPRh9C40YLRjCDQtNCw0L3QvdGL0LUg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPIChHRVQpXG4gIGdldFVzZXJEYXRhKCkge1xuICAgIHJldHVybiBmZXRjaCh0aGlzLl9iYXNlVXJsICsgXCIvdXNlcnMvbWVcIiwge1xuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xuICB9XG5cbiAgLy/Qt9Cw0LzQtdC90LjRgtGMINC00LDQvdC90YvQtSDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y8gKFBBVENIKVxuICBzZXRVc2VyRGF0YShkYXRhKSB7XG4gICAgcmV0dXJuIGZldGNoKHRoaXMuX2Jhc2VVcmwgKyBcIi91c2Vycy9tZVwiLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWU6IGRhdGEubmFtZTIsXG4gICAgICAgIGFib3V0OiBkYXRhLm9jY3VwYXRpb24sXG4gICAgICB9KSxcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xuICB9XG5cbiAgLy/Qt9Cw0LzQtdC90LjRgtGMINCw0LLQsNGC0LDRgCAoUEFUQ0gpXG4gIHNldE5ld0F2YXRhcihkYXRhKSB7XG4gICAgcmV0dXJuIGZldGNoKHRoaXMuX2Jhc2VVcmwgKyBgL3VzZXJzL21lL2F2YXRhcmAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgYXZhdGFyOiBkYXRhLmF2YXRhcmxpbmssXG4gICAgICB9KSxcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xuICB9XG5cbiAgLy/igJzQt9Cw0LvQsNC50LrQsNGC0YzigJ0g0LrQsNGA0YLQvtGH0LrRgyAoUFVUKVxuICBzZXRMaWtlQ2FyZChpZCkge1xuICAgIHJldHVybiBmZXRjaCh0aGlzLl9iYXNlVXJsICsgYC9jYXJkcy9saWtlcy8ke2lkfWAsIHtcbiAgICAgIG1ldGhvZDogXCJQVVRcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcbiAgfVxuXG4gIC8v0YPQtNCw0LvQuNGC0Ywg0LvQsNC50Log0LrQsNGA0YLQvtGH0LrQuCAoREVMRVRFKVxuICBkZWxldGVMaWtlQ2FyZChpZCkge1xuICAgIHJldHVybiBmZXRjaCh0aGlzLl9iYXNlVXJsICsgYC9jYXJkcy9saWtlcy8ke2lkfWAsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcbiAgfVxufVxuIiwiLy8g0LrQsNGA0YLQvtGH0LrQuFxuZXhwb3J0IGNvbnN0IGluaXRpYWxDYXJkcyA9IFtcbiAge1xuICAgIG5hbWU6IFwi0KHRg9C70LDQutGB0LrQuNC5INC60LDQvdGM0L7QvVwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9pLmliYi5jby9LV014aDV2L3Bob3RvLTIwMjItMDQtMDctMTYtNTItMTYuanBnXCIsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcItCU0LDRgNCz0LLQsNGBXCIsXG4gICAgbGluazogXCJodHRwczovL2kuaWJiLmNvL2pMeU5wczcvcGhvdG8tMjAyMi0wNC0wNy0xNi01Mi01NS5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwi0JHRgNCw0YLRgdC6XCIsXG4gICAgbGluazogXCJodHRwczovL2kuaWJiLmNvL25yd2Rtd0cvcGhvdG8tMjAyMi0wNC0wNy0xNi01My0wMy5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwi0J7Qu9GM0YXQvtC9XCIsXG4gICAgbGluazogXCJodHRwczovL2kuaWJiLmNvL0duS3pYWFYvcGhvdG8tMjAyMi0wNC0wNy0xNi01My0wNC5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwi0JzQuNC00LDQs9GA0LDQsdC40L3RgdC60LjQtSDQstC+0LTQvtC/0LDQtNGLXCIsXG4gICAgbGluazogXCJodHRwczovL2kuaWJiLmNvL1IyZlNLVzgvcGhvdG8tMjAyMi0wNC0wNy0xNi01Mi01Ny5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwi0JfQsNGA0LDQvNCw0LPRgdC60L7QtSDQstC+0LTQvtGF0YDQsNC90LjQu9C40YnQtVwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9pLmliYi5jby82eTlwd2M5L3Bob3RvLTIwMjItMDQtMDctMTYtNTItNTguanBnXCIsXG4gIH0sXG5dO1xuXG4vLyBET00t0Y3Qu9C10LzQtdC90YLRi1xuZXhwb3J0IGNvbnN0IGVkaXRpbmdCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VkaXRCdXR0b25cIik7IC8vINC60L3QvtC/0LrQsCDRgNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNGPXG5leHBvcnQgY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGRCdXR0b25cIik7IC8vINC60L3QvtC/0LrQsCDQvtGC0LrRgNGL0LLQsNGO0YnQsNGPINC/0L7Qv9Cw0Log0LTQvtCx0LDQstC70LXQvdC40Y8g0LrQsNGA0YLQvtGH0LrQuFxuZXhwb3J0IGNvbnN0IGF2YXRhckJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fcGhvdG8tZWRpdC1idXR0b25cIik7IC8vINC60L3QvtC/0LrQsCDQvtGC0LrRgNGL0LLQsNGO0YnQsNGPINC/0L7Qv9Cw0Log0LTQvtCx0LDQstC70LXQvdC40Y8g0LrQsNGA0YLQvtGH0LrQuFxuZXhwb3J0IGNvbnN0IGZvcm1FZGl0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmb3JtRWRpdFwiKTsgLy8g0YTQvtGA0LzQsCDRgNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNGPXG5leHBvcnQgY29uc3QgbmFtZUlucHV0ID0gZm9ybUVkaXQucXVlcnlTZWxlY3RvcihcIiNuYW1lXCIpOyAvLyDRjdC70LXQvNC10L3RgiDQstCy0L7QtNCwINC40LzQtdC90LhcbmV4cG9ydCBjb25zdCBqb2JJbnB1dCA9IGZvcm1FZGl0LnF1ZXJ5U2VsZWN0b3IoXCIjb2NjdXBhdGlvblwiKTsgLy8g0Y3Qu9C10LzQtdC90YIg0LLQstC+0LTQsCDQv9GA0L7RhNC10YHRgdC40LhcbmV4cG9ydCBjb25zdCBmb3JtQWRkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmb3JtQWRkXCIpOyAvLyDRhNC+0YDQvNCwINC00L7QsdCw0LLQu9C10L3QuNGPINC60LDRgNGC0L7Rh9C60LhcbmV4cG9ydCBjb25zdCBmb3JtQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmb3JtQXZhdGFyXCIpOyAvLyDRhNC+0YDQvNCwINC00L7QsdCw0LLQu9C10L3QuNGPINC60LDRgNGC0L7Rh9C60LhcblxuXG4vLyDQlNC70Y8g0LLQsNC70LjQtNCw0YbQuNC4IC0g0YHQtdC70LXQutGC0L7RgNGLINGE0L7RgNC8XG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLmZvcm1cIixcbiAgaW5wdXRTZWxlY3RvcjogXCIuZm9ybV9faW5wdXRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLmZvcm1fX3N1Ym1pdFwiLFxuICBlcnJvck1lc3NhZ2U6IFwiZm9ybV9fZXJyb3JfYWN0aXZlXCIsXG4gIGVycm9ySW5wdXQ6IFwiZm9ybV9faW5wdXRfZXJyb3JcIixcbiAgaW5hY3RpdmVCdXR0b246IFwiZm9ybV9fc3VibWl0X2luYWN0aXZlXCIsXG59O1xuIl0sIm5hbWVzIjpbIkNhcmQiLCJkYXRhIiwic2VsZWN0b3IiLCJoYW5kbGVDYXJkQ2xpY2siLCJoYW5kbGVDb25maXJtQ2xpY2siLCJoYW5kbGVMaWtlQ2xpY2siLCJhcGkiLCJ1c2VySWQiLCJ0aGlzIiwiX3NlbGVjdG9yIiwiX25hbWUiLCJuYW1lIiwiX2lkIiwiX293bmVySWQiLCJvd25lciIsIl91c2VySWQiLCJfbGluayIsImxpbmsiLCJfbGlrZXMiLCJsaWtlcyIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfaGFuZGxlQ29uZmlybUNsaWNrIiwiX2hhbmRsZUxpa2VDbGljayIsIl9hcGkiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX2xpa2VCdXR0b24iLCJhZGRFdmVudExpc3RlbmVyIiwiZXZ0IiwidGFyZ2V0IiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJfZWxlbWVudCIsIl9jYXJkSW1hZ2UiLCJfaGFuZGxlSW1hZ2VDbGljayIsIl9nZXRUZW1wbGF0ZSIsIl9zZXRFdmVudExpc3RlbmVycyIsInNyYyIsImFsdCIsInRleHRDb250ZW50IiwibGVuZ3RoIiwicmVtb3ZlIiwiaXNMaWtlIiwibGlrZUNvdW50IiwiYWRkIiwiRm9ybVZhbGlkYXRvciIsImZvcm1FbGVtZW50IiwiX2Zvcm0iLCJfaW5wdXRMaXN0IiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfZXJyb3JNZXNzYWdlIiwiZXJyb3JNZXNzYWdlIiwiX2Vycm9ySW5wdXQiLCJlcnJvcklucHV0IiwiX2luYWN0aXZlQnV0dG9uIiwiaW5hY3RpdmVCdXR0b24iLCJpbnB1dCIsImlucHV0TmFtZSIsImdldEF0dHJpYnV0ZSIsImVycm9yRWxlbWVudCIsInZhbGlkYXRpb25NZXNzYWdlIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsInNvbWUiLCJpbnB1dEVsZW1lbnQiLCJfaGFzSW52YWxpZElucHV0Iiwic2V0QXR0cmlidXRlIiwicmVtb3ZlQXR0cmlidXRlIiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiZm9yRWFjaCIsImUiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiX3NldExpc3RlbmVycyIsIlNlY3Rpb24iLCJyZW5kZXJlciIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJhcnIiLCJpdGVtIiwiY2FyZCIsImFkZEl0ZW0iLCJlbGVtZW50IiwicHJlcGVuZCIsIlBvcHVwIiwia2V5IiwiY2xvc2UiLCJfcG9wdXAiLCJfYnRuY2xvc2UiLCJfaGFuZGxlRXNjQ2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiYmluZCIsIl9oYW5kbGVPdmVyQ2xvc2UiLCJQb3B1cFdpdGhJbWFnZSIsIl9jYXJkUGljdHVyZSIsIl9jYXJkQ2FwdGlvbiIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVGb3JtU3VibWl0IiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfZm9ybUVsZW1lbnQiLCJfZm9ybVZhbHVlcyIsInZhbHVlIiwicHJldmVudERlZmF1bHQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJpc0xvYWRpbmciLCJyZXNldCIsIlBvcHVwV2l0aFN1Ym1pdCIsIl9oYW5kbGVGcm9tU3VibWl0IiwiVXNlckluZm8iLCJzZWxlY3Rvck5hbWUiLCJzZWxlY3RvckluZm8iLCJzZWxlY3RvckF2YXRhciIsIl91c2VyTmFtZSIsIl91c2VySW5mbyIsIl91c2VyUGhvdG8iLCJ1c2VySW5mbyIsImFjdGl2aXR5IiwiYXZhdGFyIiwiYWJvdXQiLCJBcGkiLCJjb25maWciLCJfYmFzZVVybCIsInVybCIsIl9oZWFkZXJzIiwiaGVhZGVycyIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJmZXRjaCIsIm1ldGhvZCIsInRoZW4iLCJfY2hlY2tSZXNwb25zZSIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiaWQiLCJuYW1lMiIsIm9jY3VwYXRpb24iLCJhdmF0YXJsaW5rIiwiZWRpdGluZ0J1dHRvbiIsImFkZEJ1dHRvbiIsImF2YXRhckJ1dHRvbiIsImZvcm1FZGl0IiwibmFtZUlucHV0Iiwiam9iSW5wdXQiLCJmb3JtQWRkIiwiZm9ybUF2YXRhciIsImZvcm1TZWxlY3RvciIsImF1dGhvcml6YXRpb24iLCJ1c2VyRGF0YSIsImdldFVzZXJEYXRhIiwic2V0VXNlckluZm8iLCJzZXRVc2VyUGhvdG8iLCJwb3B1cFByb2ZpbGUiLCJzZXRMb2FkaW5nIiwic2V0VXNlckRhdGEiLCJjb25zb2xlIiwibG9nIiwiY2F0Y2giLCJlcnIiLCJmaW5hbGx5Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJwb3B1cEF2YXRhciIsInNldE5ld0F2YXRhciIsImF2YXRhckZvcm1WYWxpZCIsInJlc2V0VmFsaWRhdGlvbiIsIm9wZW4iLCJjYXJkcyIsImdldEluaXRpYWxDYXJkcyIsInBvcHVwSW1hZ2UiLCJwb3B1cENvbmZpcm0iLCJkZWxldGVDYXJkIiwiZGVsZXRlTGlrZUNhcmQiLCJzZXRMaWtlQ2FyZCIsImNyZWF0ZUNhcmQiLCJhbGxDYXJkcyIsImdlbmVyYXRlQ2FyZCIsInJlc3VsdCIsInJlbmRlckl0ZW1zIiwicG9wdXBDYXJkIiwicG9zdENhcmQiLCJjYXJkRWxlbWVudCIsInVzZXJEYXRhMiIsImdldFVzZXJJbmZvIiwicHJvZmlsZUZvcm1WYWxpZCIsImNhcmRGb3JtVmFsaWQiLCJlbmFibGVWYWxpZGF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==